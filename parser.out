Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    escreva

Grammar

Rule 0     S' -> PORTUGOL
Rule 1     PORTUGOL -> Inicio INICIO
Rule 2     INICIO -> DECLARACAO
Rule 3     INICIO -> Fim
Rule 4     DECLARACAO -> TIPOVARIAVEL : DECLARACAO2 ; CODE
Rule 5     TIPOVARIAVEL -> inteiro
Rule 6     TIPOVARIAVEL -> real
Rule 7     TIPOVARIAVEL -> logico
Rule 8     TIPOVARIAVEL -> caracter
Rule 9     DECLARACAO2 -> nomeVariavel
Rule 10    DECLARACAO2 -> nomeVariavel , DECLARACAO2
Rule 11    CODE -> CODE2
Rule 12    CODE -> Fim
Rule 13    CODE2 -> ATRIBUICAO
Rule 14    CODE2 -> CONDICAO
Rule 15    CODE2 -> CICLO
Rule 16    CODE2 -> IO
Rule 17    ATRIBUICAO -> nomeVariavel assign VALUE ; CODE
Rule 18    VALUE -> EXP
Rule 19    VALUE -> STR
Rule 20    VALUE -> BOOL
Rule 21    VALUE -> nomeVariavel
Rule 22    EXP -> valorNumero
Rule 23    EXP -> VALUE + VALUE
Rule 24    EXP -> VALUE - VALUE
Rule 25    EXP -> VALUE / VALUE
Rule 26    EXP -> VALUE * VALUE
Rule 27    EXP -> VALUE < VALUE
Rule 28    EXP -> VALUE > VALUE
Rule 29    EXP -> VALUE menorIgual VALUE
Rule 30    EXP -> VALUE maiorIgual VALUE
Rule 31    EXP -> VALUE diferente VALUE
Rule 32    EXP -> VALUE = VALUE
Rule 33    STR -> valorString
Rule 34    BOOL -> TNF
Rule 35    BOOL -> VALUE e VALUE
Rule 36    BOOL -> VALUE ou VALUE
Rule 37    TNF -> verdadeiro
Rule 38    TNF -> falso
Rule 39    TNF -> nao TNF
Rule 40    CONDICAO -> se VALUE CODE2 CONDICAO2
Rule 41    CONDICAO2 -> fim_se CODE
Rule 42    CONDICAO2 -> SENAO
Rule 43    SENAO -> senao CODE2 fim_se CODE
Rule 44    CICLO -> FOR
Rule 45    CICLO -> WHILE
Rule 46    FOR -> para ATRIBUICAO de VALUE ate VALUE passo valorNumero faca CODE2 fim_para CODE
Rule 47    WHILE -> enquanto VALUE entao CODE2 fim_enquanto CODE
Rule 48    IO -> LEIA
Rule 49    LEIA -> leia ( nomeVariavel ) ; CODE

Terminals, with rules where they appear

(                    : 49
)                    : 49
*                    : 26
+                    : 23
,                    : 10
-                    : 24
/                    : 25
:                    : 4
;                    : 4 17 49
<                    : 27
=                    : 32
>                    : 28
Fim                  : 3 12
Inicio               : 1
assign               : 17
ate                  : 46
caracter             : 8
de                   : 46
diferente            : 31
e                    : 35
enquanto             : 47
entao                : 47
error                : 
escreva              : 
faca                 : 46
falso                : 38
fim_enquanto         : 47
fim_para             : 46
fim_se               : 41 43
inteiro              : 5
leia                 : 49
logico               : 7
maiorIgual           : 30
menorIgual           : 29
nao                  : 39
nomeVariavel         : 9 10 17 21 49
ou                   : 36
para                 : 46
passo                : 46
real                 : 6
se                   : 40
senao                : 43
valorNumero          : 22 46
valorString          : 33
verdadeiro           : 37

Nonterminals, with rules where they appear

ATRIBUICAO           : 13 46
BOOL                 : 20
CICLO                : 15
CODE                 : 4 17 41 43 46 47 49
CODE2                : 11 40 43 46 47
CONDICAO             : 14
CONDICAO2            : 40
DECLARACAO           : 2
DECLARACAO2          : 4 10
EXP                  : 18
FOR                  : 44
INICIO               : 1
IO                   : 16
LEIA                 : 48
PORTUGOL             : 0
SENAO                : 42
STR                  : 19
TIPOVARIAVEL         : 4
TNF                  : 34 39
VALUE                : 17 23 23 24 24 25 25 26 26 27 27 28 28 29 29 30 30 31 31 32 32 35 35 36 36 40 46 46 47
WHILE                : 45

Parsing method: LALR

state 0

    (0) S' -> . PORTUGOL
    (1) PORTUGOL -> . Inicio INICIO

    Inicio          shift and go to state 2

    PORTUGOL                       shift and go to state 1

state 1

    (0) S' -> PORTUGOL .



state 2

    (1) PORTUGOL -> Inicio . INICIO
    (2) INICIO -> . DECLARACAO
    (3) INICIO -> . Fim
    (4) DECLARACAO -> . TIPOVARIAVEL : DECLARACAO2 ; CODE
    (5) TIPOVARIAVEL -> . inteiro
    (6) TIPOVARIAVEL -> . real
    (7) TIPOVARIAVEL -> . logico
    (8) TIPOVARIAVEL -> . caracter

    Fim             shift and go to state 5
    inteiro         shift and go to state 7
    real            shift and go to state 8
    logico          shift and go to state 9
    caracter        shift and go to state 10

    INICIO                         shift and go to state 3
    DECLARACAO                     shift and go to state 4
    TIPOVARIAVEL                   shift and go to state 6

state 3

    (1) PORTUGOL -> Inicio INICIO .

    $end            reduce using rule 1 (PORTUGOL -> Inicio INICIO .)


state 4

    (2) INICIO -> DECLARACAO .

    $end            reduce using rule 2 (INICIO -> DECLARACAO .)


state 5

    (3) INICIO -> Fim .

    $end            reduce using rule 3 (INICIO -> Fim .)


state 6

    (4) DECLARACAO -> TIPOVARIAVEL . : DECLARACAO2 ; CODE

    :               shift and go to state 11


state 7

    (5) TIPOVARIAVEL -> inteiro .

    :               reduce using rule 5 (TIPOVARIAVEL -> inteiro .)


state 8

    (6) TIPOVARIAVEL -> real .

    :               reduce using rule 6 (TIPOVARIAVEL -> real .)


state 9

    (7) TIPOVARIAVEL -> logico .

    :               reduce using rule 7 (TIPOVARIAVEL -> logico .)


state 10

    (8) TIPOVARIAVEL -> caracter .

    :               reduce using rule 8 (TIPOVARIAVEL -> caracter .)


state 11

    (4) DECLARACAO -> TIPOVARIAVEL : . DECLARACAO2 ; CODE
    (9) DECLARACAO2 -> . nomeVariavel
    (10) DECLARACAO2 -> . nomeVariavel , DECLARACAO2

    nomeVariavel    shift and go to state 13

    DECLARACAO2                    shift and go to state 12

state 12

    (4) DECLARACAO -> TIPOVARIAVEL : DECLARACAO2 . ; CODE

    ;               shift and go to state 14


state 13

    (9) DECLARACAO2 -> nomeVariavel .
    (10) DECLARACAO2 -> nomeVariavel . , DECLARACAO2

    ;               reduce using rule 9 (DECLARACAO2 -> nomeVariavel .)
    ,               shift and go to state 15


state 14

    (4) DECLARACAO -> TIPOVARIAVEL : DECLARACAO2 ; . CODE
    (11) CODE -> . CODE2
    (12) CODE -> . Fim
    (13) CODE2 -> . ATRIBUICAO
    (14) CODE2 -> . CONDICAO
    (15) CODE2 -> . CICLO
    (16) CODE2 -> . IO
    (17) ATRIBUICAO -> . nomeVariavel assign VALUE ; CODE
    (40) CONDICAO -> . se VALUE CODE2 CONDICAO2
    (44) CICLO -> . FOR
    (45) CICLO -> . WHILE
    (48) IO -> . LEIA
    (46) FOR -> . para ATRIBUICAO de VALUE ate VALUE passo valorNumero faca CODE2 fim_para CODE
    (47) WHILE -> . enquanto VALUE entao CODE2 fim_enquanto CODE
    (49) LEIA -> . leia ( nomeVariavel ) ; CODE

    Fim             shift and go to state 18
    nomeVariavel    shift and go to state 23
    se              shift and go to state 24
    para            shift and go to state 28
    enquanto        shift and go to state 29
    leia            shift and go to state 30

    CODE                           shift and go to state 16
    CODE2                          shift and go to state 17
    ATRIBUICAO                     shift and go to state 19
    CONDICAO                       shift and go to state 20
    CICLO                          shift and go to state 21
    IO                             shift and go to state 22
    FOR                            shift and go to state 25
    WHILE                          shift and go to state 26
    LEIA                           shift and go to state 27

state 15

    (10) DECLARACAO2 -> nomeVariavel , . DECLARACAO2
    (9) DECLARACAO2 -> . nomeVariavel
    (10) DECLARACAO2 -> . nomeVariavel , DECLARACAO2

    nomeVariavel    shift and go to state 13

    DECLARACAO2                    shift and go to state 31

state 16

    (4) DECLARACAO -> TIPOVARIAVEL : DECLARACAO2 ; CODE .

    $end            reduce using rule 4 (DECLARACAO -> TIPOVARIAVEL : DECLARACAO2 ; CODE .)


state 17

    (11) CODE -> CODE2 .

    $end            reduce using rule 11 (CODE -> CODE2 .)
    fim_se          reduce using rule 11 (CODE -> CODE2 .)
    senao           reduce using rule 11 (CODE -> CODE2 .)
    fim_enquanto    reduce using rule 11 (CODE -> CODE2 .)
    de              reduce using rule 11 (CODE -> CODE2 .)
    fim_para        reduce using rule 11 (CODE -> CODE2 .)


state 18

    (12) CODE -> Fim .

    $end            reduce using rule 12 (CODE -> Fim .)
    fim_se          reduce using rule 12 (CODE -> Fim .)
    senao           reduce using rule 12 (CODE -> Fim .)
    fim_enquanto    reduce using rule 12 (CODE -> Fim .)
    de              reduce using rule 12 (CODE -> Fim .)
    fim_para        reduce using rule 12 (CODE -> Fim .)


state 19

    (13) CODE2 -> ATRIBUICAO .

    $end            reduce using rule 13 (CODE2 -> ATRIBUICAO .)
    fim_se          reduce using rule 13 (CODE2 -> ATRIBUICAO .)
    senao           reduce using rule 13 (CODE2 -> ATRIBUICAO .)
    fim_enquanto    reduce using rule 13 (CODE2 -> ATRIBUICAO .)
    de              reduce using rule 13 (CODE2 -> ATRIBUICAO .)
    fim_para        reduce using rule 13 (CODE2 -> ATRIBUICAO .)


state 20

    (14) CODE2 -> CONDICAO .

    $end            reduce using rule 14 (CODE2 -> CONDICAO .)
    fim_se          reduce using rule 14 (CODE2 -> CONDICAO .)
    senao           reduce using rule 14 (CODE2 -> CONDICAO .)
    fim_enquanto    reduce using rule 14 (CODE2 -> CONDICAO .)
    de              reduce using rule 14 (CODE2 -> CONDICAO .)
    fim_para        reduce using rule 14 (CODE2 -> CONDICAO .)


state 21

    (15) CODE2 -> CICLO .

    $end            reduce using rule 15 (CODE2 -> CICLO .)
    fim_se          reduce using rule 15 (CODE2 -> CICLO .)
    senao           reduce using rule 15 (CODE2 -> CICLO .)
    fim_enquanto    reduce using rule 15 (CODE2 -> CICLO .)
    de              reduce using rule 15 (CODE2 -> CICLO .)
    fim_para        reduce using rule 15 (CODE2 -> CICLO .)


state 22

    (16) CODE2 -> IO .

    $end            reduce using rule 16 (CODE2 -> IO .)
    fim_se          reduce using rule 16 (CODE2 -> IO .)
    senao           reduce using rule 16 (CODE2 -> IO .)
    fim_enquanto    reduce using rule 16 (CODE2 -> IO .)
    de              reduce using rule 16 (CODE2 -> IO .)
    fim_para        reduce using rule 16 (CODE2 -> IO .)


state 23

    (17) ATRIBUICAO -> nomeVariavel . assign VALUE ; CODE

    assign          shift and go to state 32


state 24

    (40) CONDICAO -> se . VALUE CODE2 CONDICAO2
    (18) VALUE -> . EXP
    (19) VALUE -> . STR
    (20) VALUE -> . BOOL
    (21) VALUE -> . nomeVariavel
    (22) EXP -> . valorNumero
    (23) EXP -> . VALUE + VALUE
    (24) EXP -> . VALUE - VALUE
    (25) EXP -> . VALUE / VALUE
    (26) EXP -> . VALUE * VALUE
    (27) EXP -> . VALUE < VALUE
    (28) EXP -> . VALUE > VALUE
    (29) EXP -> . VALUE menorIgual VALUE
    (30) EXP -> . VALUE maiorIgual VALUE
    (31) EXP -> . VALUE diferente VALUE
    (32) EXP -> . VALUE = VALUE
    (33) STR -> . valorString
    (34) BOOL -> . TNF
    (35) BOOL -> . VALUE e VALUE
    (36) BOOL -> . VALUE ou VALUE
    (37) TNF -> . verdadeiro
    (38) TNF -> . falso
    (39) TNF -> . nao TNF

    nomeVariavel    shift and go to state 37
    valorNumero     shift and go to state 38
    valorString     shift and go to state 39
    verdadeiro      shift and go to state 41
    falso           shift and go to state 42
    nao             shift and go to state 43

    VALUE                          shift and go to state 33
    EXP                            shift and go to state 34
    STR                            shift and go to state 35
    BOOL                           shift and go to state 36
    TNF                            shift and go to state 40

state 25

    (44) CICLO -> FOR .

    $end            reduce using rule 44 (CICLO -> FOR .)
    fim_se          reduce using rule 44 (CICLO -> FOR .)
    senao           reduce using rule 44 (CICLO -> FOR .)
    fim_enquanto    reduce using rule 44 (CICLO -> FOR .)
    de              reduce using rule 44 (CICLO -> FOR .)
    fim_para        reduce using rule 44 (CICLO -> FOR .)


state 26

    (45) CICLO -> WHILE .

    $end            reduce using rule 45 (CICLO -> WHILE .)
    fim_se          reduce using rule 45 (CICLO -> WHILE .)
    senao           reduce using rule 45 (CICLO -> WHILE .)
    fim_enquanto    reduce using rule 45 (CICLO -> WHILE .)
    de              reduce using rule 45 (CICLO -> WHILE .)
    fim_para        reduce using rule 45 (CICLO -> WHILE .)


state 27

    (48) IO -> LEIA .

    $end            reduce using rule 48 (IO -> LEIA .)
    fim_se          reduce using rule 48 (IO -> LEIA .)
    senao           reduce using rule 48 (IO -> LEIA .)
    fim_enquanto    reduce using rule 48 (IO -> LEIA .)
    de              reduce using rule 48 (IO -> LEIA .)
    fim_para        reduce using rule 48 (IO -> LEIA .)


state 28

    (46) FOR -> para . ATRIBUICAO de VALUE ate VALUE passo valorNumero faca CODE2 fim_para CODE
    (17) ATRIBUICAO -> . nomeVariavel assign VALUE ; CODE

    nomeVariavel    shift and go to state 23

    ATRIBUICAO                     shift and go to state 44

state 29

    (47) WHILE -> enquanto . VALUE entao CODE2 fim_enquanto CODE
    (18) VALUE -> . EXP
    (19) VALUE -> . STR
    (20) VALUE -> . BOOL
    (21) VALUE -> . nomeVariavel
    (22) EXP -> . valorNumero
    (23) EXP -> . VALUE + VALUE
    (24) EXP -> . VALUE - VALUE
    (25) EXP -> . VALUE / VALUE
    (26) EXP -> . VALUE * VALUE
    (27) EXP -> . VALUE < VALUE
    (28) EXP -> . VALUE > VALUE
    (29) EXP -> . VALUE menorIgual VALUE
    (30) EXP -> . VALUE maiorIgual VALUE
    (31) EXP -> . VALUE diferente VALUE
    (32) EXP -> . VALUE = VALUE
    (33) STR -> . valorString
    (34) BOOL -> . TNF
    (35) BOOL -> . VALUE e VALUE
    (36) BOOL -> . VALUE ou VALUE
    (37) TNF -> . verdadeiro
    (38) TNF -> . falso
    (39) TNF -> . nao TNF

    nomeVariavel    shift and go to state 37
    valorNumero     shift and go to state 38
    valorString     shift and go to state 39
    verdadeiro      shift and go to state 41
    falso           shift and go to state 42
    nao             shift and go to state 43

    VALUE                          shift and go to state 45
    EXP                            shift and go to state 34
    STR                            shift and go to state 35
    BOOL                           shift and go to state 36
    TNF                            shift and go to state 40

state 30

    (49) LEIA -> leia . ( nomeVariavel ) ; CODE

    (               shift and go to state 46


state 31

    (10) DECLARACAO2 -> nomeVariavel , DECLARACAO2 .

    ;               reduce using rule 10 (DECLARACAO2 -> nomeVariavel , DECLARACAO2 .)


state 32

    (17) ATRIBUICAO -> nomeVariavel assign . VALUE ; CODE
    (18) VALUE -> . EXP
    (19) VALUE -> . STR
    (20) VALUE -> . BOOL
    (21) VALUE -> . nomeVariavel
    (22) EXP -> . valorNumero
    (23) EXP -> . VALUE + VALUE
    (24) EXP -> . VALUE - VALUE
    (25) EXP -> . VALUE / VALUE
    (26) EXP -> . VALUE * VALUE
    (27) EXP -> . VALUE < VALUE
    (28) EXP -> . VALUE > VALUE
    (29) EXP -> . VALUE menorIgual VALUE
    (30) EXP -> . VALUE maiorIgual VALUE
    (31) EXP -> . VALUE diferente VALUE
    (32) EXP -> . VALUE = VALUE
    (33) STR -> . valorString
    (34) BOOL -> . TNF
    (35) BOOL -> . VALUE e VALUE
    (36) BOOL -> . VALUE ou VALUE
    (37) TNF -> . verdadeiro
    (38) TNF -> . falso
    (39) TNF -> . nao TNF

    nomeVariavel    shift and go to state 37
    valorNumero     shift and go to state 38
    valorString     shift and go to state 39
    verdadeiro      shift and go to state 41
    falso           shift and go to state 42
    nao             shift and go to state 43

    VALUE                          shift and go to state 47
    EXP                            shift and go to state 34
    STR                            shift and go to state 35
    BOOL                           shift and go to state 36
    TNF                            shift and go to state 40

state 33

    (40) CONDICAO -> se VALUE . CODE2 CONDICAO2
    (23) EXP -> VALUE . + VALUE
    (24) EXP -> VALUE . - VALUE
    (25) EXP -> VALUE . / VALUE
    (26) EXP -> VALUE . * VALUE
    (27) EXP -> VALUE . < VALUE
    (28) EXP -> VALUE . > VALUE
    (29) EXP -> VALUE . menorIgual VALUE
    (30) EXP -> VALUE . maiorIgual VALUE
    (31) EXP -> VALUE . diferente VALUE
    (32) EXP -> VALUE . = VALUE
    (35) BOOL -> VALUE . e VALUE
    (36) BOOL -> VALUE . ou VALUE
    (13) CODE2 -> . ATRIBUICAO
    (14) CODE2 -> . CONDICAO
    (15) CODE2 -> . CICLO
    (16) CODE2 -> . IO
    (17) ATRIBUICAO -> . nomeVariavel assign VALUE ; CODE
    (40) CONDICAO -> . se VALUE CODE2 CONDICAO2
    (44) CICLO -> . FOR
    (45) CICLO -> . WHILE
    (48) IO -> . LEIA
    (46) FOR -> . para ATRIBUICAO de VALUE ate VALUE passo valorNumero faca CODE2 fim_para CODE
    (47) WHILE -> . enquanto VALUE entao CODE2 fim_enquanto CODE
    (49) LEIA -> . leia ( nomeVariavel ) ; CODE

    +               shift and go to state 49
    -               shift and go to state 50
    /               shift and go to state 51
    *               shift and go to state 52
    <               shift and go to state 53
    >               shift and go to state 54
    menorIgual      shift and go to state 55
    maiorIgual      shift and go to state 56
    diferente       shift and go to state 57
    =               shift and go to state 58
    e               shift and go to state 59
    ou              shift and go to state 60
    nomeVariavel    shift and go to state 23
    se              shift and go to state 24
    para            shift and go to state 28
    enquanto        shift and go to state 29
    leia            shift and go to state 30

    CODE2                          shift and go to state 48
    ATRIBUICAO                     shift and go to state 19
    CONDICAO                       shift and go to state 20
    CICLO                          shift and go to state 21
    IO                             shift and go to state 22
    FOR                            shift and go to state 25
    WHILE                          shift and go to state 26
    LEIA                           shift and go to state 27

state 34

    (18) VALUE -> EXP .

    +               reduce using rule 18 (VALUE -> EXP .)
    -               reduce using rule 18 (VALUE -> EXP .)
    /               reduce using rule 18 (VALUE -> EXP .)
    *               reduce using rule 18 (VALUE -> EXP .)
    <               reduce using rule 18 (VALUE -> EXP .)
    >               reduce using rule 18 (VALUE -> EXP .)
    menorIgual      reduce using rule 18 (VALUE -> EXP .)
    maiorIgual      reduce using rule 18 (VALUE -> EXP .)
    diferente       reduce using rule 18 (VALUE -> EXP .)
    =               reduce using rule 18 (VALUE -> EXP .)
    e               reduce using rule 18 (VALUE -> EXP .)
    ou              reduce using rule 18 (VALUE -> EXP .)
    nomeVariavel    reduce using rule 18 (VALUE -> EXP .)
    se              reduce using rule 18 (VALUE -> EXP .)
    para            reduce using rule 18 (VALUE -> EXP .)
    enquanto        reduce using rule 18 (VALUE -> EXP .)
    leia            reduce using rule 18 (VALUE -> EXP .)
    entao           reduce using rule 18 (VALUE -> EXP .)
    ;               reduce using rule 18 (VALUE -> EXP .)
    ate             reduce using rule 18 (VALUE -> EXP .)
    passo           reduce using rule 18 (VALUE -> EXP .)


state 35

    (19) VALUE -> STR .

    +               reduce using rule 19 (VALUE -> STR .)
    -               reduce using rule 19 (VALUE -> STR .)
    /               reduce using rule 19 (VALUE -> STR .)
    *               reduce using rule 19 (VALUE -> STR .)
    <               reduce using rule 19 (VALUE -> STR .)
    >               reduce using rule 19 (VALUE -> STR .)
    menorIgual      reduce using rule 19 (VALUE -> STR .)
    maiorIgual      reduce using rule 19 (VALUE -> STR .)
    diferente       reduce using rule 19 (VALUE -> STR .)
    =               reduce using rule 19 (VALUE -> STR .)
    e               reduce using rule 19 (VALUE -> STR .)
    ou              reduce using rule 19 (VALUE -> STR .)
    nomeVariavel    reduce using rule 19 (VALUE -> STR .)
    se              reduce using rule 19 (VALUE -> STR .)
    para            reduce using rule 19 (VALUE -> STR .)
    enquanto        reduce using rule 19 (VALUE -> STR .)
    leia            reduce using rule 19 (VALUE -> STR .)
    entao           reduce using rule 19 (VALUE -> STR .)
    ;               reduce using rule 19 (VALUE -> STR .)
    ate             reduce using rule 19 (VALUE -> STR .)
    passo           reduce using rule 19 (VALUE -> STR .)


state 36

    (20) VALUE -> BOOL .

    +               reduce using rule 20 (VALUE -> BOOL .)
    -               reduce using rule 20 (VALUE -> BOOL .)
    /               reduce using rule 20 (VALUE -> BOOL .)
    *               reduce using rule 20 (VALUE -> BOOL .)
    <               reduce using rule 20 (VALUE -> BOOL .)
    >               reduce using rule 20 (VALUE -> BOOL .)
    menorIgual      reduce using rule 20 (VALUE -> BOOL .)
    maiorIgual      reduce using rule 20 (VALUE -> BOOL .)
    diferente       reduce using rule 20 (VALUE -> BOOL .)
    =               reduce using rule 20 (VALUE -> BOOL .)
    e               reduce using rule 20 (VALUE -> BOOL .)
    ou              reduce using rule 20 (VALUE -> BOOL .)
    nomeVariavel    reduce using rule 20 (VALUE -> BOOL .)
    se              reduce using rule 20 (VALUE -> BOOL .)
    para            reduce using rule 20 (VALUE -> BOOL .)
    enquanto        reduce using rule 20 (VALUE -> BOOL .)
    leia            reduce using rule 20 (VALUE -> BOOL .)
    entao           reduce using rule 20 (VALUE -> BOOL .)
    ;               reduce using rule 20 (VALUE -> BOOL .)
    ate             reduce using rule 20 (VALUE -> BOOL .)
    passo           reduce using rule 20 (VALUE -> BOOL .)


state 37

    (21) VALUE -> nomeVariavel .

    +               reduce using rule 21 (VALUE -> nomeVariavel .)
    -               reduce using rule 21 (VALUE -> nomeVariavel .)
    /               reduce using rule 21 (VALUE -> nomeVariavel .)
    *               reduce using rule 21 (VALUE -> nomeVariavel .)
    <               reduce using rule 21 (VALUE -> nomeVariavel .)
    >               reduce using rule 21 (VALUE -> nomeVariavel .)
    menorIgual      reduce using rule 21 (VALUE -> nomeVariavel .)
    maiorIgual      reduce using rule 21 (VALUE -> nomeVariavel .)
    diferente       reduce using rule 21 (VALUE -> nomeVariavel .)
    =               reduce using rule 21 (VALUE -> nomeVariavel .)
    e               reduce using rule 21 (VALUE -> nomeVariavel .)
    ou              reduce using rule 21 (VALUE -> nomeVariavel .)
    nomeVariavel    reduce using rule 21 (VALUE -> nomeVariavel .)
    se              reduce using rule 21 (VALUE -> nomeVariavel .)
    para            reduce using rule 21 (VALUE -> nomeVariavel .)
    enquanto        reduce using rule 21 (VALUE -> nomeVariavel .)
    leia            reduce using rule 21 (VALUE -> nomeVariavel .)
    entao           reduce using rule 21 (VALUE -> nomeVariavel .)
    ;               reduce using rule 21 (VALUE -> nomeVariavel .)
    ate             reduce using rule 21 (VALUE -> nomeVariavel .)
    passo           reduce using rule 21 (VALUE -> nomeVariavel .)


state 38

    (22) EXP -> valorNumero .

    +               reduce using rule 22 (EXP -> valorNumero .)
    -               reduce using rule 22 (EXP -> valorNumero .)
    /               reduce using rule 22 (EXP -> valorNumero .)
    *               reduce using rule 22 (EXP -> valorNumero .)
    <               reduce using rule 22 (EXP -> valorNumero .)
    >               reduce using rule 22 (EXP -> valorNumero .)
    menorIgual      reduce using rule 22 (EXP -> valorNumero .)
    maiorIgual      reduce using rule 22 (EXP -> valorNumero .)
    diferente       reduce using rule 22 (EXP -> valorNumero .)
    =               reduce using rule 22 (EXP -> valorNumero .)
    e               reduce using rule 22 (EXP -> valorNumero .)
    ou              reduce using rule 22 (EXP -> valorNumero .)
    nomeVariavel    reduce using rule 22 (EXP -> valorNumero .)
    se              reduce using rule 22 (EXP -> valorNumero .)
    para            reduce using rule 22 (EXP -> valorNumero .)
    enquanto        reduce using rule 22 (EXP -> valorNumero .)
    leia            reduce using rule 22 (EXP -> valorNumero .)
    entao           reduce using rule 22 (EXP -> valorNumero .)
    ;               reduce using rule 22 (EXP -> valorNumero .)
    ate             reduce using rule 22 (EXP -> valorNumero .)
    passo           reduce using rule 22 (EXP -> valorNumero .)


state 39

    (33) STR -> valorString .

    +               reduce using rule 33 (STR -> valorString .)
    -               reduce using rule 33 (STR -> valorString .)
    /               reduce using rule 33 (STR -> valorString .)
    *               reduce using rule 33 (STR -> valorString .)
    <               reduce using rule 33 (STR -> valorString .)
    >               reduce using rule 33 (STR -> valorString .)
    menorIgual      reduce using rule 33 (STR -> valorString .)
    maiorIgual      reduce using rule 33 (STR -> valorString .)
    diferente       reduce using rule 33 (STR -> valorString .)
    =               reduce using rule 33 (STR -> valorString .)
    e               reduce using rule 33 (STR -> valorString .)
    ou              reduce using rule 33 (STR -> valorString .)
    nomeVariavel    reduce using rule 33 (STR -> valorString .)
    se              reduce using rule 33 (STR -> valorString .)
    para            reduce using rule 33 (STR -> valorString .)
    enquanto        reduce using rule 33 (STR -> valorString .)
    leia            reduce using rule 33 (STR -> valorString .)
    entao           reduce using rule 33 (STR -> valorString .)
    ;               reduce using rule 33 (STR -> valorString .)
    ate             reduce using rule 33 (STR -> valorString .)
    passo           reduce using rule 33 (STR -> valorString .)


state 40

    (34) BOOL -> TNF .

    +               reduce using rule 34 (BOOL -> TNF .)
    -               reduce using rule 34 (BOOL -> TNF .)
    /               reduce using rule 34 (BOOL -> TNF .)
    *               reduce using rule 34 (BOOL -> TNF .)
    <               reduce using rule 34 (BOOL -> TNF .)
    >               reduce using rule 34 (BOOL -> TNF .)
    menorIgual      reduce using rule 34 (BOOL -> TNF .)
    maiorIgual      reduce using rule 34 (BOOL -> TNF .)
    diferente       reduce using rule 34 (BOOL -> TNF .)
    =               reduce using rule 34 (BOOL -> TNF .)
    e               reduce using rule 34 (BOOL -> TNF .)
    ou              reduce using rule 34 (BOOL -> TNF .)
    nomeVariavel    reduce using rule 34 (BOOL -> TNF .)
    se              reduce using rule 34 (BOOL -> TNF .)
    para            reduce using rule 34 (BOOL -> TNF .)
    enquanto        reduce using rule 34 (BOOL -> TNF .)
    leia            reduce using rule 34 (BOOL -> TNF .)
    entao           reduce using rule 34 (BOOL -> TNF .)
    ;               reduce using rule 34 (BOOL -> TNF .)
    ate             reduce using rule 34 (BOOL -> TNF .)
    passo           reduce using rule 34 (BOOL -> TNF .)


state 41

    (37) TNF -> verdadeiro .

    +               reduce using rule 37 (TNF -> verdadeiro .)
    -               reduce using rule 37 (TNF -> verdadeiro .)
    /               reduce using rule 37 (TNF -> verdadeiro .)
    *               reduce using rule 37 (TNF -> verdadeiro .)
    <               reduce using rule 37 (TNF -> verdadeiro .)
    >               reduce using rule 37 (TNF -> verdadeiro .)
    menorIgual      reduce using rule 37 (TNF -> verdadeiro .)
    maiorIgual      reduce using rule 37 (TNF -> verdadeiro .)
    diferente       reduce using rule 37 (TNF -> verdadeiro .)
    =               reduce using rule 37 (TNF -> verdadeiro .)
    e               reduce using rule 37 (TNF -> verdadeiro .)
    ou              reduce using rule 37 (TNF -> verdadeiro .)
    nomeVariavel    reduce using rule 37 (TNF -> verdadeiro .)
    se              reduce using rule 37 (TNF -> verdadeiro .)
    para            reduce using rule 37 (TNF -> verdadeiro .)
    enquanto        reduce using rule 37 (TNF -> verdadeiro .)
    leia            reduce using rule 37 (TNF -> verdadeiro .)
    entao           reduce using rule 37 (TNF -> verdadeiro .)
    ;               reduce using rule 37 (TNF -> verdadeiro .)
    ate             reduce using rule 37 (TNF -> verdadeiro .)
    passo           reduce using rule 37 (TNF -> verdadeiro .)


state 42

    (38) TNF -> falso .

    +               reduce using rule 38 (TNF -> falso .)
    -               reduce using rule 38 (TNF -> falso .)
    /               reduce using rule 38 (TNF -> falso .)
    *               reduce using rule 38 (TNF -> falso .)
    <               reduce using rule 38 (TNF -> falso .)
    >               reduce using rule 38 (TNF -> falso .)
    menorIgual      reduce using rule 38 (TNF -> falso .)
    maiorIgual      reduce using rule 38 (TNF -> falso .)
    diferente       reduce using rule 38 (TNF -> falso .)
    =               reduce using rule 38 (TNF -> falso .)
    e               reduce using rule 38 (TNF -> falso .)
    ou              reduce using rule 38 (TNF -> falso .)
    nomeVariavel    reduce using rule 38 (TNF -> falso .)
    se              reduce using rule 38 (TNF -> falso .)
    para            reduce using rule 38 (TNF -> falso .)
    enquanto        reduce using rule 38 (TNF -> falso .)
    leia            reduce using rule 38 (TNF -> falso .)
    entao           reduce using rule 38 (TNF -> falso .)
    ;               reduce using rule 38 (TNF -> falso .)
    ate             reduce using rule 38 (TNF -> falso .)
    passo           reduce using rule 38 (TNF -> falso .)


state 43

    (39) TNF -> nao . TNF
    (37) TNF -> . verdadeiro
    (38) TNF -> . falso
    (39) TNF -> . nao TNF

    verdadeiro      shift and go to state 41
    falso           shift and go to state 42
    nao             shift and go to state 43

    TNF                            shift and go to state 61

state 44

    (46) FOR -> para ATRIBUICAO . de VALUE ate VALUE passo valorNumero faca CODE2 fim_para CODE

    de              shift and go to state 62


state 45

    (47) WHILE -> enquanto VALUE . entao CODE2 fim_enquanto CODE
    (23) EXP -> VALUE . + VALUE
    (24) EXP -> VALUE . - VALUE
    (25) EXP -> VALUE . / VALUE
    (26) EXP -> VALUE . * VALUE
    (27) EXP -> VALUE . < VALUE
    (28) EXP -> VALUE . > VALUE
    (29) EXP -> VALUE . menorIgual VALUE
    (30) EXP -> VALUE . maiorIgual VALUE
    (31) EXP -> VALUE . diferente VALUE
    (32) EXP -> VALUE . = VALUE
    (35) BOOL -> VALUE . e VALUE
    (36) BOOL -> VALUE . ou VALUE

    entao           shift and go to state 63
    +               shift and go to state 49
    -               shift and go to state 50
    /               shift and go to state 51
    *               shift and go to state 52
    <               shift and go to state 53
    >               shift and go to state 54
    menorIgual      shift and go to state 55
    maiorIgual      shift and go to state 56
    diferente       shift and go to state 57
    =               shift and go to state 58
    e               shift and go to state 59
    ou              shift and go to state 60


state 46

    (49) LEIA -> leia ( . nomeVariavel ) ; CODE

    nomeVariavel    shift and go to state 64


state 47

    (17) ATRIBUICAO -> nomeVariavel assign VALUE . ; CODE
    (23) EXP -> VALUE . + VALUE
    (24) EXP -> VALUE . - VALUE
    (25) EXP -> VALUE . / VALUE
    (26) EXP -> VALUE . * VALUE
    (27) EXP -> VALUE . < VALUE
    (28) EXP -> VALUE . > VALUE
    (29) EXP -> VALUE . menorIgual VALUE
    (30) EXP -> VALUE . maiorIgual VALUE
    (31) EXP -> VALUE . diferente VALUE
    (32) EXP -> VALUE . = VALUE
    (35) BOOL -> VALUE . e VALUE
    (36) BOOL -> VALUE . ou VALUE

    ;               shift and go to state 65
    +               shift and go to state 49
    -               shift and go to state 50
    /               shift and go to state 51
    *               shift and go to state 52
    <               shift and go to state 53
    >               shift and go to state 54
    menorIgual      shift and go to state 55
    maiorIgual      shift and go to state 56
    diferente       shift and go to state 57
    =               shift and go to state 58
    e               shift and go to state 59
    ou              shift and go to state 60


state 48

    (40) CONDICAO -> se VALUE CODE2 . CONDICAO2
    (41) CONDICAO2 -> . fim_se CODE
    (42) CONDICAO2 -> . SENAO
    (43) SENAO -> . senao CODE2 fim_se CODE

    fim_se          shift and go to state 67
    senao           shift and go to state 69

    CONDICAO2                      shift and go to state 66
    SENAO                          shift and go to state 68

state 49

    (23) EXP -> VALUE + . VALUE
    (18) VALUE -> . EXP
    (19) VALUE -> . STR
    (20) VALUE -> . BOOL
    (21) VALUE -> . nomeVariavel
    (22) EXP -> . valorNumero
    (23) EXP -> . VALUE + VALUE
    (24) EXP -> . VALUE - VALUE
    (25) EXP -> . VALUE / VALUE
    (26) EXP -> . VALUE * VALUE
    (27) EXP -> . VALUE < VALUE
    (28) EXP -> . VALUE > VALUE
    (29) EXP -> . VALUE menorIgual VALUE
    (30) EXP -> . VALUE maiorIgual VALUE
    (31) EXP -> . VALUE diferente VALUE
    (32) EXP -> . VALUE = VALUE
    (33) STR -> . valorString
    (34) BOOL -> . TNF
    (35) BOOL -> . VALUE e VALUE
    (36) BOOL -> . VALUE ou VALUE
    (37) TNF -> . verdadeiro
    (38) TNF -> . falso
    (39) TNF -> . nao TNF

    nomeVariavel    shift and go to state 37
    valorNumero     shift and go to state 38
    valorString     shift and go to state 39
    verdadeiro      shift and go to state 41
    falso           shift and go to state 42
    nao             shift and go to state 43

    VALUE                          shift and go to state 70
    EXP                            shift and go to state 34
    STR                            shift and go to state 35
    BOOL                           shift and go to state 36
    TNF                            shift and go to state 40

state 50

    (24) EXP -> VALUE - . VALUE
    (18) VALUE -> . EXP
    (19) VALUE -> . STR
    (20) VALUE -> . BOOL
    (21) VALUE -> . nomeVariavel
    (22) EXP -> . valorNumero
    (23) EXP -> . VALUE + VALUE
    (24) EXP -> . VALUE - VALUE
    (25) EXP -> . VALUE / VALUE
    (26) EXP -> . VALUE * VALUE
    (27) EXP -> . VALUE < VALUE
    (28) EXP -> . VALUE > VALUE
    (29) EXP -> . VALUE menorIgual VALUE
    (30) EXP -> . VALUE maiorIgual VALUE
    (31) EXP -> . VALUE diferente VALUE
    (32) EXP -> . VALUE = VALUE
    (33) STR -> . valorString
    (34) BOOL -> . TNF
    (35) BOOL -> . VALUE e VALUE
    (36) BOOL -> . VALUE ou VALUE
    (37) TNF -> . verdadeiro
    (38) TNF -> . falso
    (39) TNF -> . nao TNF

    nomeVariavel    shift and go to state 37
    valorNumero     shift and go to state 38
    valorString     shift and go to state 39
    verdadeiro      shift and go to state 41
    falso           shift and go to state 42
    nao             shift and go to state 43

    VALUE                          shift and go to state 71
    EXP                            shift and go to state 34
    STR                            shift and go to state 35
    BOOL                           shift and go to state 36
    TNF                            shift and go to state 40

state 51

    (25) EXP -> VALUE / . VALUE
    (18) VALUE -> . EXP
    (19) VALUE -> . STR
    (20) VALUE -> . BOOL
    (21) VALUE -> . nomeVariavel
    (22) EXP -> . valorNumero
    (23) EXP -> . VALUE + VALUE
    (24) EXP -> . VALUE - VALUE
    (25) EXP -> . VALUE / VALUE
    (26) EXP -> . VALUE * VALUE
    (27) EXP -> . VALUE < VALUE
    (28) EXP -> . VALUE > VALUE
    (29) EXP -> . VALUE menorIgual VALUE
    (30) EXP -> . VALUE maiorIgual VALUE
    (31) EXP -> . VALUE diferente VALUE
    (32) EXP -> . VALUE = VALUE
    (33) STR -> . valorString
    (34) BOOL -> . TNF
    (35) BOOL -> . VALUE e VALUE
    (36) BOOL -> . VALUE ou VALUE
    (37) TNF -> . verdadeiro
    (38) TNF -> . falso
    (39) TNF -> . nao TNF

    nomeVariavel    shift and go to state 37
    valorNumero     shift and go to state 38
    valorString     shift and go to state 39
    verdadeiro      shift and go to state 41
    falso           shift and go to state 42
    nao             shift and go to state 43

    VALUE                          shift and go to state 72
    EXP                            shift and go to state 34
    STR                            shift and go to state 35
    BOOL                           shift and go to state 36
    TNF                            shift and go to state 40

state 52

    (26) EXP -> VALUE * . VALUE
    (18) VALUE -> . EXP
    (19) VALUE -> . STR
    (20) VALUE -> . BOOL
    (21) VALUE -> . nomeVariavel
    (22) EXP -> . valorNumero
    (23) EXP -> . VALUE + VALUE
    (24) EXP -> . VALUE - VALUE
    (25) EXP -> . VALUE / VALUE
    (26) EXP -> . VALUE * VALUE
    (27) EXP -> . VALUE < VALUE
    (28) EXP -> . VALUE > VALUE
    (29) EXP -> . VALUE menorIgual VALUE
    (30) EXP -> . VALUE maiorIgual VALUE
    (31) EXP -> . VALUE diferente VALUE
    (32) EXP -> . VALUE = VALUE
    (33) STR -> . valorString
    (34) BOOL -> . TNF
    (35) BOOL -> . VALUE e VALUE
    (36) BOOL -> . VALUE ou VALUE
    (37) TNF -> . verdadeiro
    (38) TNF -> . falso
    (39) TNF -> . nao TNF

    nomeVariavel    shift and go to state 37
    valorNumero     shift and go to state 38
    valorString     shift and go to state 39
    verdadeiro      shift and go to state 41
    falso           shift and go to state 42
    nao             shift and go to state 43

    VALUE                          shift and go to state 73
    EXP                            shift and go to state 34
    STR                            shift and go to state 35
    BOOL                           shift and go to state 36
    TNF                            shift and go to state 40

state 53

    (27) EXP -> VALUE < . VALUE
    (18) VALUE -> . EXP
    (19) VALUE -> . STR
    (20) VALUE -> . BOOL
    (21) VALUE -> . nomeVariavel
    (22) EXP -> . valorNumero
    (23) EXP -> . VALUE + VALUE
    (24) EXP -> . VALUE - VALUE
    (25) EXP -> . VALUE / VALUE
    (26) EXP -> . VALUE * VALUE
    (27) EXP -> . VALUE < VALUE
    (28) EXP -> . VALUE > VALUE
    (29) EXP -> . VALUE menorIgual VALUE
    (30) EXP -> . VALUE maiorIgual VALUE
    (31) EXP -> . VALUE diferente VALUE
    (32) EXP -> . VALUE = VALUE
    (33) STR -> . valorString
    (34) BOOL -> . TNF
    (35) BOOL -> . VALUE e VALUE
    (36) BOOL -> . VALUE ou VALUE
    (37) TNF -> . verdadeiro
    (38) TNF -> . falso
    (39) TNF -> . nao TNF

    nomeVariavel    shift and go to state 37
    valorNumero     shift and go to state 38
    valorString     shift and go to state 39
    verdadeiro      shift and go to state 41
    falso           shift and go to state 42
    nao             shift and go to state 43

    VALUE                          shift and go to state 74
    EXP                            shift and go to state 34
    STR                            shift and go to state 35
    BOOL                           shift and go to state 36
    TNF                            shift and go to state 40

state 54

    (28) EXP -> VALUE > . VALUE
    (18) VALUE -> . EXP
    (19) VALUE -> . STR
    (20) VALUE -> . BOOL
    (21) VALUE -> . nomeVariavel
    (22) EXP -> . valorNumero
    (23) EXP -> . VALUE + VALUE
    (24) EXP -> . VALUE - VALUE
    (25) EXP -> . VALUE / VALUE
    (26) EXP -> . VALUE * VALUE
    (27) EXP -> . VALUE < VALUE
    (28) EXP -> . VALUE > VALUE
    (29) EXP -> . VALUE menorIgual VALUE
    (30) EXP -> . VALUE maiorIgual VALUE
    (31) EXP -> . VALUE diferente VALUE
    (32) EXP -> . VALUE = VALUE
    (33) STR -> . valorString
    (34) BOOL -> . TNF
    (35) BOOL -> . VALUE e VALUE
    (36) BOOL -> . VALUE ou VALUE
    (37) TNF -> . verdadeiro
    (38) TNF -> . falso
    (39) TNF -> . nao TNF

    nomeVariavel    shift and go to state 37
    valorNumero     shift and go to state 38
    valorString     shift and go to state 39
    verdadeiro      shift and go to state 41
    falso           shift and go to state 42
    nao             shift and go to state 43

    VALUE                          shift and go to state 75
    EXP                            shift and go to state 34
    STR                            shift and go to state 35
    BOOL                           shift and go to state 36
    TNF                            shift and go to state 40

state 55

    (29) EXP -> VALUE menorIgual . VALUE
    (18) VALUE -> . EXP
    (19) VALUE -> . STR
    (20) VALUE -> . BOOL
    (21) VALUE -> . nomeVariavel
    (22) EXP -> . valorNumero
    (23) EXP -> . VALUE + VALUE
    (24) EXP -> . VALUE - VALUE
    (25) EXP -> . VALUE / VALUE
    (26) EXP -> . VALUE * VALUE
    (27) EXP -> . VALUE < VALUE
    (28) EXP -> . VALUE > VALUE
    (29) EXP -> . VALUE menorIgual VALUE
    (30) EXP -> . VALUE maiorIgual VALUE
    (31) EXP -> . VALUE diferente VALUE
    (32) EXP -> . VALUE = VALUE
    (33) STR -> . valorString
    (34) BOOL -> . TNF
    (35) BOOL -> . VALUE e VALUE
    (36) BOOL -> . VALUE ou VALUE
    (37) TNF -> . verdadeiro
    (38) TNF -> . falso
    (39) TNF -> . nao TNF

    nomeVariavel    shift and go to state 37
    valorNumero     shift and go to state 38
    valorString     shift and go to state 39
    verdadeiro      shift and go to state 41
    falso           shift and go to state 42
    nao             shift and go to state 43

    VALUE                          shift and go to state 76
    EXP                            shift and go to state 34
    STR                            shift and go to state 35
    BOOL                           shift and go to state 36
    TNF                            shift and go to state 40

state 56

    (30) EXP -> VALUE maiorIgual . VALUE
    (18) VALUE -> . EXP
    (19) VALUE -> . STR
    (20) VALUE -> . BOOL
    (21) VALUE -> . nomeVariavel
    (22) EXP -> . valorNumero
    (23) EXP -> . VALUE + VALUE
    (24) EXP -> . VALUE - VALUE
    (25) EXP -> . VALUE / VALUE
    (26) EXP -> . VALUE * VALUE
    (27) EXP -> . VALUE < VALUE
    (28) EXP -> . VALUE > VALUE
    (29) EXP -> . VALUE menorIgual VALUE
    (30) EXP -> . VALUE maiorIgual VALUE
    (31) EXP -> . VALUE diferente VALUE
    (32) EXP -> . VALUE = VALUE
    (33) STR -> . valorString
    (34) BOOL -> . TNF
    (35) BOOL -> . VALUE e VALUE
    (36) BOOL -> . VALUE ou VALUE
    (37) TNF -> . verdadeiro
    (38) TNF -> . falso
    (39) TNF -> . nao TNF

    nomeVariavel    shift and go to state 37
    valorNumero     shift and go to state 38
    valorString     shift and go to state 39
    verdadeiro      shift and go to state 41
    falso           shift and go to state 42
    nao             shift and go to state 43

    VALUE                          shift and go to state 77
    EXP                            shift and go to state 34
    STR                            shift and go to state 35
    BOOL                           shift and go to state 36
    TNF                            shift and go to state 40

state 57

    (31) EXP -> VALUE diferente . VALUE
    (18) VALUE -> . EXP
    (19) VALUE -> . STR
    (20) VALUE -> . BOOL
    (21) VALUE -> . nomeVariavel
    (22) EXP -> . valorNumero
    (23) EXP -> . VALUE + VALUE
    (24) EXP -> . VALUE - VALUE
    (25) EXP -> . VALUE / VALUE
    (26) EXP -> . VALUE * VALUE
    (27) EXP -> . VALUE < VALUE
    (28) EXP -> . VALUE > VALUE
    (29) EXP -> . VALUE menorIgual VALUE
    (30) EXP -> . VALUE maiorIgual VALUE
    (31) EXP -> . VALUE diferente VALUE
    (32) EXP -> . VALUE = VALUE
    (33) STR -> . valorString
    (34) BOOL -> . TNF
    (35) BOOL -> . VALUE e VALUE
    (36) BOOL -> . VALUE ou VALUE
    (37) TNF -> . verdadeiro
    (38) TNF -> . falso
    (39) TNF -> . nao TNF

    nomeVariavel    shift and go to state 37
    valorNumero     shift and go to state 38
    valorString     shift and go to state 39
    verdadeiro      shift and go to state 41
    falso           shift and go to state 42
    nao             shift and go to state 43

    VALUE                          shift and go to state 78
    EXP                            shift and go to state 34
    STR                            shift and go to state 35
    BOOL                           shift and go to state 36
    TNF                            shift and go to state 40

state 58

    (32) EXP -> VALUE = . VALUE
    (18) VALUE -> . EXP
    (19) VALUE -> . STR
    (20) VALUE -> . BOOL
    (21) VALUE -> . nomeVariavel
    (22) EXP -> . valorNumero
    (23) EXP -> . VALUE + VALUE
    (24) EXP -> . VALUE - VALUE
    (25) EXP -> . VALUE / VALUE
    (26) EXP -> . VALUE * VALUE
    (27) EXP -> . VALUE < VALUE
    (28) EXP -> . VALUE > VALUE
    (29) EXP -> . VALUE menorIgual VALUE
    (30) EXP -> . VALUE maiorIgual VALUE
    (31) EXP -> . VALUE diferente VALUE
    (32) EXP -> . VALUE = VALUE
    (33) STR -> . valorString
    (34) BOOL -> . TNF
    (35) BOOL -> . VALUE e VALUE
    (36) BOOL -> . VALUE ou VALUE
    (37) TNF -> . verdadeiro
    (38) TNF -> . falso
    (39) TNF -> . nao TNF

    nomeVariavel    shift and go to state 37
    valorNumero     shift and go to state 38
    valorString     shift and go to state 39
    verdadeiro      shift and go to state 41
    falso           shift and go to state 42
    nao             shift and go to state 43

    VALUE                          shift and go to state 79
    EXP                            shift and go to state 34
    STR                            shift and go to state 35
    BOOL                           shift and go to state 36
    TNF                            shift and go to state 40

state 59

    (35) BOOL -> VALUE e . VALUE
    (18) VALUE -> . EXP
    (19) VALUE -> . STR
    (20) VALUE -> . BOOL
    (21) VALUE -> . nomeVariavel
    (22) EXP -> . valorNumero
    (23) EXP -> . VALUE + VALUE
    (24) EXP -> . VALUE - VALUE
    (25) EXP -> . VALUE / VALUE
    (26) EXP -> . VALUE * VALUE
    (27) EXP -> . VALUE < VALUE
    (28) EXP -> . VALUE > VALUE
    (29) EXP -> . VALUE menorIgual VALUE
    (30) EXP -> . VALUE maiorIgual VALUE
    (31) EXP -> . VALUE diferente VALUE
    (32) EXP -> . VALUE = VALUE
    (33) STR -> . valorString
    (34) BOOL -> . TNF
    (35) BOOL -> . VALUE e VALUE
    (36) BOOL -> . VALUE ou VALUE
    (37) TNF -> . verdadeiro
    (38) TNF -> . falso
    (39) TNF -> . nao TNF

    nomeVariavel    shift and go to state 37
    valorNumero     shift and go to state 38
    valorString     shift and go to state 39
    verdadeiro      shift and go to state 41
    falso           shift and go to state 42
    nao             shift and go to state 43

    VALUE                          shift and go to state 80
    EXP                            shift and go to state 34
    STR                            shift and go to state 35
    BOOL                           shift and go to state 36
    TNF                            shift and go to state 40

state 60

    (36) BOOL -> VALUE ou . VALUE
    (18) VALUE -> . EXP
    (19) VALUE -> . STR
    (20) VALUE -> . BOOL
    (21) VALUE -> . nomeVariavel
    (22) EXP -> . valorNumero
    (23) EXP -> . VALUE + VALUE
    (24) EXP -> . VALUE - VALUE
    (25) EXP -> . VALUE / VALUE
    (26) EXP -> . VALUE * VALUE
    (27) EXP -> . VALUE < VALUE
    (28) EXP -> . VALUE > VALUE
    (29) EXP -> . VALUE menorIgual VALUE
    (30) EXP -> . VALUE maiorIgual VALUE
    (31) EXP -> . VALUE diferente VALUE
    (32) EXP -> . VALUE = VALUE
    (33) STR -> . valorString
    (34) BOOL -> . TNF
    (35) BOOL -> . VALUE e VALUE
    (36) BOOL -> . VALUE ou VALUE
    (37) TNF -> . verdadeiro
    (38) TNF -> . falso
    (39) TNF -> . nao TNF

    nomeVariavel    shift and go to state 37
    valorNumero     shift and go to state 38
    valorString     shift and go to state 39
    verdadeiro      shift and go to state 41
    falso           shift and go to state 42
    nao             shift and go to state 43

    VALUE                          shift and go to state 81
    EXP                            shift and go to state 34
    STR                            shift and go to state 35
    BOOL                           shift and go to state 36
    TNF                            shift and go to state 40

state 61

    (39) TNF -> nao TNF .

    +               reduce using rule 39 (TNF -> nao TNF .)
    -               reduce using rule 39 (TNF -> nao TNF .)
    /               reduce using rule 39 (TNF -> nao TNF .)
    *               reduce using rule 39 (TNF -> nao TNF .)
    <               reduce using rule 39 (TNF -> nao TNF .)
    >               reduce using rule 39 (TNF -> nao TNF .)
    menorIgual      reduce using rule 39 (TNF -> nao TNF .)
    maiorIgual      reduce using rule 39 (TNF -> nao TNF .)
    diferente       reduce using rule 39 (TNF -> nao TNF .)
    =               reduce using rule 39 (TNF -> nao TNF .)
    e               reduce using rule 39 (TNF -> nao TNF .)
    ou              reduce using rule 39 (TNF -> nao TNF .)
    nomeVariavel    reduce using rule 39 (TNF -> nao TNF .)
    se              reduce using rule 39 (TNF -> nao TNF .)
    para            reduce using rule 39 (TNF -> nao TNF .)
    enquanto        reduce using rule 39 (TNF -> nao TNF .)
    leia            reduce using rule 39 (TNF -> nao TNF .)
    entao           reduce using rule 39 (TNF -> nao TNF .)
    ;               reduce using rule 39 (TNF -> nao TNF .)
    ate             reduce using rule 39 (TNF -> nao TNF .)
    passo           reduce using rule 39 (TNF -> nao TNF .)


state 62

    (46) FOR -> para ATRIBUICAO de . VALUE ate VALUE passo valorNumero faca CODE2 fim_para CODE
    (18) VALUE -> . EXP
    (19) VALUE -> . STR
    (20) VALUE -> . BOOL
    (21) VALUE -> . nomeVariavel
    (22) EXP -> . valorNumero
    (23) EXP -> . VALUE + VALUE
    (24) EXP -> . VALUE - VALUE
    (25) EXP -> . VALUE / VALUE
    (26) EXP -> . VALUE * VALUE
    (27) EXP -> . VALUE < VALUE
    (28) EXP -> . VALUE > VALUE
    (29) EXP -> . VALUE menorIgual VALUE
    (30) EXP -> . VALUE maiorIgual VALUE
    (31) EXP -> . VALUE diferente VALUE
    (32) EXP -> . VALUE = VALUE
    (33) STR -> . valorString
    (34) BOOL -> . TNF
    (35) BOOL -> . VALUE e VALUE
    (36) BOOL -> . VALUE ou VALUE
    (37) TNF -> . verdadeiro
    (38) TNF -> . falso
    (39) TNF -> . nao TNF

    nomeVariavel    shift and go to state 37
    valorNumero     shift and go to state 38
    valorString     shift and go to state 39
    verdadeiro      shift and go to state 41
    falso           shift and go to state 42
    nao             shift and go to state 43

    VALUE                          shift and go to state 82
    EXP                            shift and go to state 34
    STR                            shift and go to state 35
    BOOL                           shift and go to state 36
    TNF                            shift and go to state 40

state 63

    (47) WHILE -> enquanto VALUE entao . CODE2 fim_enquanto CODE
    (13) CODE2 -> . ATRIBUICAO
    (14) CODE2 -> . CONDICAO
    (15) CODE2 -> . CICLO
    (16) CODE2 -> . IO
    (17) ATRIBUICAO -> . nomeVariavel assign VALUE ; CODE
    (40) CONDICAO -> . se VALUE CODE2 CONDICAO2
    (44) CICLO -> . FOR
    (45) CICLO -> . WHILE
    (48) IO -> . LEIA
    (46) FOR -> . para ATRIBUICAO de VALUE ate VALUE passo valorNumero faca CODE2 fim_para CODE
    (47) WHILE -> . enquanto VALUE entao CODE2 fim_enquanto CODE
    (49) LEIA -> . leia ( nomeVariavel ) ; CODE

    nomeVariavel    shift and go to state 23
    se              shift and go to state 24
    para            shift and go to state 28
    enquanto        shift and go to state 29
    leia            shift and go to state 30

    CODE2                          shift and go to state 83
    ATRIBUICAO                     shift and go to state 19
    CONDICAO                       shift and go to state 20
    CICLO                          shift and go to state 21
    IO                             shift and go to state 22
    FOR                            shift and go to state 25
    WHILE                          shift and go to state 26
    LEIA                           shift and go to state 27

state 64

    (49) LEIA -> leia ( nomeVariavel . ) ; CODE

    )               shift and go to state 84


state 65

    (17) ATRIBUICAO -> nomeVariavel assign VALUE ; . CODE
    (11) CODE -> . CODE2
    (12) CODE -> . Fim
    (13) CODE2 -> . ATRIBUICAO
    (14) CODE2 -> . CONDICAO
    (15) CODE2 -> . CICLO
    (16) CODE2 -> . IO
    (17) ATRIBUICAO -> . nomeVariavel assign VALUE ; CODE
    (40) CONDICAO -> . se VALUE CODE2 CONDICAO2
    (44) CICLO -> . FOR
    (45) CICLO -> . WHILE
    (48) IO -> . LEIA
    (46) FOR -> . para ATRIBUICAO de VALUE ate VALUE passo valorNumero faca CODE2 fim_para CODE
    (47) WHILE -> . enquanto VALUE entao CODE2 fim_enquanto CODE
    (49) LEIA -> . leia ( nomeVariavel ) ; CODE

    Fim             shift and go to state 18
    nomeVariavel    shift and go to state 23
    se              shift and go to state 24
    para            shift and go to state 28
    enquanto        shift and go to state 29
    leia            shift and go to state 30

    CODE                           shift and go to state 85
    CODE2                          shift and go to state 17
    ATRIBUICAO                     shift and go to state 19
    CONDICAO                       shift and go to state 20
    CICLO                          shift and go to state 21
    IO                             shift and go to state 22
    FOR                            shift and go to state 25
    WHILE                          shift and go to state 26
    LEIA                           shift and go to state 27

state 66

    (40) CONDICAO -> se VALUE CODE2 CONDICAO2 .

    $end            reduce using rule 40 (CONDICAO -> se VALUE CODE2 CONDICAO2 .)
    fim_se          reduce using rule 40 (CONDICAO -> se VALUE CODE2 CONDICAO2 .)
    senao           reduce using rule 40 (CONDICAO -> se VALUE CODE2 CONDICAO2 .)
    fim_enquanto    reduce using rule 40 (CONDICAO -> se VALUE CODE2 CONDICAO2 .)
    de              reduce using rule 40 (CONDICAO -> se VALUE CODE2 CONDICAO2 .)
    fim_para        reduce using rule 40 (CONDICAO -> se VALUE CODE2 CONDICAO2 .)


state 67

    (41) CONDICAO2 -> fim_se . CODE
    (11) CODE -> . CODE2
    (12) CODE -> . Fim
    (13) CODE2 -> . ATRIBUICAO
    (14) CODE2 -> . CONDICAO
    (15) CODE2 -> . CICLO
    (16) CODE2 -> . IO
    (17) ATRIBUICAO -> . nomeVariavel assign VALUE ; CODE
    (40) CONDICAO -> . se VALUE CODE2 CONDICAO2
    (44) CICLO -> . FOR
    (45) CICLO -> . WHILE
    (48) IO -> . LEIA
    (46) FOR -> . para ATRIBUICAO de VALUE ate VALUE passo valorNumero faca CODE2 fim_para CODE
    (47) WHILE -> . enquanto VALUE entao CODE2 fim_enquanto CODE
    (49) LEIA -> . leia ( nomeVariavel ) ; CODE

    Fim             shift and go to state 18
    nomeVariavel    shift and go to state 23
    se              shift and go to state 24
    para            shift and go to state 28
    enquanto        shift and go to state 29
    leia            shift and go to state 30

    CODE                           shift and go to state 86
    CODE2                          shift and go to state 17
    ATRIBUICAO                     shift and go to state 19
    CONDICAO                       shift and go to state 20
    CICLO                          shift and go to state 21
    IO                             shift and go to state 22
    FOR                            shift and go to state 25
    WHILE                          shift and go to state 26
    LEIA                           shift and go to state 27

state 68

    (42) CONDICAO2 -> SENAO .

    $end            reduce using rule 42 (CONDICAO2 -> SENAO .)
    fim_se          reduce using rule 42 (CONDICAO2 -> SENAO .)
    senao           reduce using rule 42 (CONDICAO2 -> SENAO .)
    fim_enquanto    reduce using rule 42 (CONDICAO2 -> SENAO .)
    de              reduce using rule 42 (CONDICAO2 -> SENAO .)
    fim_para        reduce using rule 42 (CONDICAO2 -> SENAO .)


state 69

    (43) SENAO -> senao . CODE2 fim_se CODE
    (13) CODE2 -> . ATRIBUICAO
    (14) CODE2 -> . CONDICAO
    (15) CODE2 -> . CICLO
    (16) CODE2 -> . IO
    (17) ATRIBUICAO -> . nomeVariavel assign VALUE ; CODE
    (40) CONDICAO -> . se VALUE CODE2 CONDICAO2
    (44) CICLO -> . FOR
    (45) CICLO -> . WHILE
    (48) IO -> . LEIA
    (46) FOR -> . para ATRIBUICAO de VALUE ate VALUE passo valorNumero faca CODE2 fim_para CODE
    (47) WHILE -> . enquanto VALUE entao CODE2 fim_enquanto CODE
    (49) LEIA -> . leia ( nomeVariavel ) ; CODE

    nomeVariavel    shift and go to state 23
    se              shift and go to state 24
    para            shift and go to state 28
    enquanto        shift and go to state 29
    leia            shift and go to state 30

    CODE2                          shift and go to state 87
    ATRIBUICAO                     shift and go to state 19
    CONDICAO                       shift and go to state 20
    CICLO                          shift and go to state 21
    IO                             shift and go to state 22
    FOR                            shift and go to state 25
    WHILE                          shift and go to state 26
    LEIA                           shift and go to state 27

state 70

    (23) EXP -> VALUE + VALUE .
    (23) EXP -> VALUE . + VALUE
    (24) EXP -> VALUE . - VALUE
    (25) EXP -> VALUE . / VALUE
    (26) EXP -> VALUE . * VALUE
    (27) EXP -> VALUE . < VALUE
    (28) EXP -> VALUE . > VALUE
    (29) EXP -> VALUE . menorIgual VALUE
    (30) EXP -> VALUE . maiorIgual VALUE
    (31) EXP -> VALUE . diferente VALUE
    (32) EXP -> VALUE . = VALUE
    (35) BOOL -> VALUE . e VALUE
    (36) BOOL -> VALUE . ou VALUE

    +               reduce using rule 23 (EXP -> VALUE + VALUE .)
    -               reduce using rule 23 (EXP -> VALUE + VALUE .)
    <               reduce using rule 23 (EXP -> VALUE + VALUE .)
    >               reduce using rule 23 (EXP -> VALUE + VALUE .)
    menorIgual      reduce using rule 23 (EXP -> VALUE + VALUE .)
    maiorIgual      reduce using rule 23 (EXP -> VALUE + VALUE .)
    diferente       reduce using rule 23 (EXP -> VALUE + VALUE .)
    =               reduce using rule 23 (EXP -> VALUE + VALUE .)
    nomeVariavel    reduce using rule 23 (EXP -> VALUE + VALUE .)
    se              reduce using rule 23 (EXP -> VALUE + VALUE .)
    para            reduce using rule 23 (EXP -> VALUE + VALUE .)
    enquanto        reduce using rule 23 (EXP -> VALUE + VALUE .)
    leia            reduce using rule 23 (EXP -> VALUE + VALUE .)
    entao           reduce using rule 23 (EXP -> VALUE + VALUE .)
    ;               reduce using rule 23 (EXP -> VALUE + VALUE .)
    ate             reduce using rule 23 (EXP -> VALUE + VALUE .)
    passo           reduce using rule 23 (EXP -> VALUE + VALUE .)
    /               shift and go to state 51
    *               shift and go to state 52
    e               shift and go to state 59
    ou              shift and go to state 60

  ! /               [ reduce using rule 23 (EXP -> VALUE + VALUE .) ]
  ! *               [ reduce using rule 23 (EXP -> VALUE + VALUE .) ]
  ! e               [ reduce using rule 23 (EXP -> VALUE + VALUE .) ]
  ! ou              [ reduce using rule 23 (EXP -> VALUE + VALUE .) ]
  ! +               [ shift and go to state 49 ]
  ! -               [ shift and go to state 50 ]
  ! <               [ shift and go to state 53 ]
  ! >               [ shift and go to state 54 ]
  ! menorIgual      [ shift and go to state 55 ]
  ! maiorIgual      [ shift and go to state 56 ]
  ! diferente       [ shift and go to state 57 ]
  ! =               [ shift and go to state 58 ]


state 71

    (24) EXP -> VALUE - VALUE .
    (23) EXP -> VALUE . + VALUE
    (24) EXP -> VALUE . - VALUE
    (25) EXP -> VALUE . / VALUE
    (26) EXP -> VALUE . * VALUE
    (27) EXP -> VALUE . < VALUE
    (28) EXP -> VALUE . > VALUE
    (29) EXP -> VALUE . menorIgual VALUE
    (30) EXP -> VALUE . maiorIgual VALUE
    (31) EXP -> VALUE . diferente VALUE
    (32) EXP -> VALUE . = VALUE
    (35) BOOL -> VALUE . e VALUE
    (36) BOOL -> VALUE . ou VALUE

    +               reduce using rule 24 (EXP -> VALUE - VALUE .)
    -               reduce using rule 24 (EXP -> VALUE - VALUE .)
    <               reduce using rule 24 (EXP -> VALUE - VALUE .)
    >               reduce using rule 24 (EXP -> VALUE - VALUE .)
    menorIgual      reduce using rule 24 (EXP -> VALUE - VALUE .)
    maiorIgual      reduce using rule 24 (EXP -> VALUE - VALUE .)
    diferente       reduce using rule 24 (EXP -> VALUE - VALUE .)
    =               reduce using rule 24 (EXP -> VALUE - VALUE .)
    nomeVariavel    reduce using rule 24 (EXP -> VALUE - VALUE .)
    se              reduce using rule 24 (EXP -> VALUE - VALUE .)
    para            reduce using rule 24 (EXP -> VALUE - VALUE .)
    enquanto        reduce using rule 24 (EXP -> VALUE - VALUE .)
    leia            reduce using rule 24 (EXP -> VALUE - VALUE .)
    entao           reduce using rule 24 (EXP -> VALUE - VALUE .)
    ;               reduce using rule 24 (EXP -> VALUE - VALUE .)
    ate             reduce using rule 24 (EXP -> VALUE - VALUE .)
    passo           reduce using rule 24 (EXP -> VALUE - VALUE .)
    /               shift and go to state 51
    *               shift and go to state 52
    e               shift and go to state 59
    ou              shift and go to state 60

  ! /               [ reduce using rule 24 (EXP -> VALUE - VALUE .) ]
  ! *               [ reduce using rule 24 (EXP -> VALUE - VALUE .) ]
  ! e               [ reduce using rule 24 (EXP -> VALUE - VALUE .) ]
  ! ou              [ reduce using rule 24 (EXP -> VALUE - VALUE .) ]
  ! +               [ shift and go to state 49 ]
  ! -               [ shift and go to state 50 ]
  ! <               [ shift and go to state 53 ]
  ! >               [ shift and go to state 54 ]
  ! menorIgual      [ shift and go to state 55 ]
  ! maiorIgual      [ shift and go to state 56 ]
  ! diferente       [ shift and go to state 57 ]
  ! =               [ shift and go to state 58 ]


state 72

    (25) EXP -> VALUE / VALUE .
    (23) EXP -> VALUE . + VALUE
    (24) EXP -> VALUE . - VALUE
    (25) EXP -> VALUE . / VALUE
    (26) EXP -> VALUE . * VALUE
    (27) EXP -> VALUE . < VALUE
    (28) EXP -> VALUE . > VALUE
    (29) EXP -> VALUE . menorIgual VALUE
    (30) EXP -> VALUE . maiorIgual VALUE
    (31) EXP -> VALUE . diferente VALUE
    (32) EXP -> VALUE . = VALUE
    (35) BOOL -> VALUE . e VALUE
    (36) BOOL -> VALUE . ou VALUE

    +               reduce using rule 25 (EXP -> VALUE / VALUE .)
    -               reduce using rule 25 (EXP -> VALUE / VALUE .)
    /               reduce using rule 25 (EXP -> VALUE / VALUE .)
    *               reduce using rule 25 (EXP -> VALUE / VALUE .)
    <               reduce using rule 25 (EXP -> VALUE / VALUE .)
    >               reduce using rule 25 (EXP -> VALUE / VALUE .)
    menorIgual      reduce using rule 25 (EXP -> VALUE / VALUE .)
    maiorIgual      reduce using rule 25 (EXP -> VALUE / VALUE .)
    diferente       reduce using rule 25 (EXP -> VALUE / VALUE .)
    =               reduce using rule 25 (EXP -> VALUE / VALUE .)
    nomeVariavel    reduce using rule 25 (EXP -> VALUE / VALUE .)
    se              reduce using rule 25 (EXP -> VALUE / VALUE .)
    para            reduce using rule 25 (EXP -> VALUE / VALUE .)
    enquanto        reduce using rule 25 (EXP -> VALUE / VALUE .)
    leia            reduce using rule 25 (EXP -> VALUE / VALUE .)
    entao           reduce using rule 25 (EXP -> VALUE / VALUE .)
    ;               reduce using rule 25 (EXP -> VALUE / VALUE .)
    ate             reduce using rule 25 (EXP -> VALUE / VALUE .)
    passo           reduce using rule 25 (EXP -> VALUE / VALUE .)
    e               shift and go to state 59
    ou              shift and go to state 60

  ! e               [ reduce using rule 25 (EXP -> VALUE / VALUE .) ]
  ! ou              [ reduce using rule 25 (EXP -> VALUE / VALUE .) ]
  ! +               [ shift and go to state 49 ]
  ! -               [ shift and go to state 50 ]
  ! /               [ shift and go to state 51 ]
  ! *               [ shift and go to state 52 ]
  ! <               [ shift and go to state 53 ]
  ! >               [ shift and go to state 54 ]
  ! menorIgual      [ shift and go to state 55 ]
  ! maiorIgual      [ shift and go to state 56 ]
  ! diferente       [ shift and go to state 57 ]
  ! =               [ shift and go to state 58 ]


state 73

    (26) EXP -> VALUE * VALUE .
    (23) EXP -> VALUE . + VALUE
    (24) EXP -> VALUE . - VALUE
    (25) EXP -> VALUE . / VALUE
    (26) EXP -> VALUE . * VALUE
    (27) EXP -> VALUE . < VALUE
    (28) EXP -> VALUE . > VALUE
    (29) EXP -> VALUE . menorIgual VALUE
    (30) EXP -> VALUE . maiorIgual VALUE
    (31) EXP -> VALUE . diferente VALUE
    (32) EXP -> VALUE . = VALUE
    (35) BOOL -> VALUE . e VALUE
    (36) BOOL -> VALUE . ou VALUE

    +               reduce using rule 26 (EXP -> VALUE * VALUE .)
    -               reduce using rule 26 (EXP -> VALUE * VALUE .)
    /               reduce using rule 26 (EXP -> VALUE * VALUE .)
    *               reduce using rule 26 (EXP -> VALUE * VALUE .)
    <               reduce using rule 26 (EXP -> VALUE * VALUE .)
    >               reduce using rule 26 (EXP -> VALUE * VALUE .)
    menorIgual      reduce using rule 26 (EXP -> VALUE * VALUE .)
    maiorIgual      reduce using rule 26 (EXP -> VALUE * VALUE .)
    diferente       reduce using rule 26 (EXP -> VALUE * VALUE .)
    =               reduce using rule 26 (EXP -> VALUE * VALUE .)
    nomeVariavel    reduce using rule 26 (EXP -> VALUE * VALUE .)
    se              reduce using rule 26 (EXP -> VALUE * VALUE .)
    para            reduce using rule 26 (EXP -> VALUE * VALUE .)
    enquanto        reduce using rule 26 (EXP -> VALUE * VALUE .)
    leia            reduce using rule 26 (EXP -> VALUE * VALUE .)
    entao           reduce using rule 26 (EXP -> VALUE * VALUE .)
    ;               reduce using rule 26 (EXP -> VALUE * VALUE .)
    ate             reduce using rule 26 (EXP -> VALUE * VALUE .)
    passo           reduce using rule 26 (EXP -> VALUE * VALUE .)
    e               shift and go to state 59
    ou              shift and go to state 60

  ! e               [ reduce using rule 26 (EXP -> VALUE * VALUE .) ]
  ! ou              [ reduce using rule 26 (EXP -> VALUE * VALUE .) ]
  ! +               [ shift and go to state 49 ]
  ! -               [ shift and go to state 50 ]
  ! /               [ shift and go to state 51 ]
  ! *               [ shift and go to state 52 ]
  ! <               [ shift and go to state 53 ]
  ! >               [ shift and go to state 54 ]
  ! menorIgual      [ shift and go to state 55 ]
  ! maiorIgual      [ shift and go to state 56 ]
  ! diferente       [ shift and go to state 57 ]
  ! =               [ shift and go to state 58 ]


state 74

    (27) EXP -> VALUE < VALUE .
    (23) EXP -> VALUE . + VALUE
    (24) EXP -> VALUE . - VALUE
    (25) EXP -> VALUE . / VALUE
    (26) EXP -> VALUE . * VALUE
    (27) EXP -> VALUE . < VALUE
    (28) EXP -> VALUE . > VALUE
    (29) EXP -> VALUE . menorIgual VALUE
    (30) EXP -> VALUE . maiorIgual VALUE
    (31) EXP -> VALUE . diferente VALUE
    (32) EXP -> VALUE . = VALUE
    (35) BOOL -> VALUE . e VALUE
    (36) BOOL -> VALUE . ou VALUE

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for > resolved as shift
  ! shift/reduce conflict for menorIgual resolved as shift
  ! shift/reduce conflict for maiorIgual resolved as shift
  ! shift/reduce conflict for diferente resolved as shift
  ! shift/reduce conflict for = resolved as shift
  ! shift/reduce conflict for e resolved as shift
  ! shift/reduce conflict for ou resolved as shift
    nomeVariavel    reduce using rule 27 (EXP -> VALUE < VALUE .)
    se              reduce using rule 27 (EXP -> VALUE < VALUE .)
    para            reduce using rule 27 (EXP -> VALUE < VALUE .)
    enquanto        reduce using rule 27 (EXP -> VALUE < VALUE .)
    leia            reduce using rule 27 (EXP -> VALUE < VALUE .)
    entao           reduce using rule 27 (EXP -> VALUE < VALUE .)
    ;               reduce using rule 27 (EXP -> VALUE < VALUE .)
    ate             reduce using rule 27 (EXP -> VALUE < VALUE .)
    passo           reduce using rule 27 (EXP -> VALUE < VALUE .)
    +               shift and go to state 49
    -               shift and go to state 50
    /               shift and go to state 51
    *               shift and go to state 52
    <               shift and go to state 53
    >               shift and go to state 54
    menorIgual      shift and go to state 55
    maiorIgual      shift and go to state 56
    diferente       shift and go to state 57
    =               shift and go to state 58
    e               shift and go to state 59
    ou              shift and go to state 60

  ! +               [ reduce using rule 27 (EXP -> VALUE < VALUE .) ]
  ! -               [ reduce using rule 27 (EXP -> VALUE < VALUE .) ]
  ! /               [ reduce using rule 27 (EXP -> VALUE < VALUE .) ]
  ! *               [ reduce using rule 27 (EXP -> VALUE < VALUE .) ]
  ! <               [ reduce using rule 27 (EXP -> VALUE < VALUE .) ]
  ! >               [ reduce using rule 27 (EXP -> VALUE < VALUE .) ]
  ! menorIgual      [ reduce using rule 27 (EXP -> VALUE < VALUE .) ]
  ! maiorIgual      [ reduce using rule 27 (EXP -> VALUE < VALUE .) ]
  ! diferente       [ reduce using rule 27 (EXP -> VALUE < VALUE .) ]
  ! =               [ reduce using rule 27 (EXP -> VALUE < VALUE .) ]
  ! e               [ reduce using rule 27 (EXP -> VALUE < VALUE .) ]
  ! ou              [ reduce using rule 27 (EXP -> VALUE < VALUE .) ]


state 75

    (28) EXP -> VALUE > VALUE .
    (23) EXP -> VALUE . + VALUE
    (24) EXP -> VALUE . - VALUE
    (25) EXP -> VALUE . / VALUE
    (26) EXP -> VALUE . * VALUE
    (27) EXP -> VALUE . < VALUE
    (28) EXP -> VALUE . > VALUE
    (29) EXP -> VALUE . menorIgual VALUE
    (30) EXP -> VALUE . maiorIgual VALUE
    (31) EXP -> VALUE . diferente VALUE
    (32) EXP -> VALUE . = VALUE
    (35) BOOL -> VALUE . e VALUE
    (36) BOOL -> VALUE . ou VALUE

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for > resolved as shift
  ! shift/reduce conflict for menorIgual resolved as shift
  ! shift/reduce conflict for maiorIgual resolved as shift
  ! shift/reduce conflict for diferente resolved as shift
  ! shift/reduce conflict for = resolved as shift
  ! shift/reduce conflict for e resolved as shift
  ! shift/reduce conflict for ou resolved as shift
    nomeVariavel    reduce using rule 28 (EXP -> VALUE > VALUE .)
    se              reduce using rule 28 (EXP -> VALUE > VALUE .)
    para            reduce using rule 28 (EXP -> VALUE > VALUE .)
    enquanto        reduce using rule 28 (EXP -> VALUE > VALUE .)
    leia            reduce using rule 28 (EXP -> VALUE > VALUE .)
    entao           reduce using rule 28 (EXP -> VALUE > VALUE .)
    ;               reduce using rule 28 (EXP -> VALUE > VALUE .)
    ate             reduce using rule 28 (EXP -> VALUE > VALUE .)
    passo           reduce using rule 28 (EXP -> VALUE > VALUE .)
    +               shift and go to state 49
    -               shift and go to state 50
    /               shift and go to state 51
    *               shift and go to state 52
    <               shift and go to state 53
    >               shift and go to state 54
    menorIgual      shift and go to state 55
    maiorIgual      shift and go to state 56
    diferente       shift and go to state 57
    =               shift and go to state 58
    e               shift and go to state 59
    ou              shift and go to state 60

  ! +               [ reduce using rule 28 (EXP -> VALUE > VALUE .) ]
  ! -               [ reduce using rule 28 (EXP -> VALUE > VALUE .) ]
  ! /               [ reduce using rule 28 (EXP -> VALUE > VALUE .) ]
  ! *               [ reduce using rule 28 (EXP -> VALUE > VALUE .) ]
  ! <               [ reduce using rule 28 (EXP -> VALUE > VALUE .) ]
  ! >               [ reduce using rule 28 (EXP -> VALUE > VALUE .) ]
  ! menorIgual      [ reduce using rule 28 (EXP -> VALUE > VALUE .) ]
  ! maiorIgual      [ reduce using rule 28 (EXP -> VALUE > VALUE .) ]
  ! diferente       [ reduce using rule 28 (EXP -> VALUE > VALUE .) ]
  ! =               [ reduce using rule 28 (EXP -> VALUE > VALUE .) ]
  ! e               [ reduce using rule 28 (EXP -> VALUE > VALUE .) ]
  ! ou              [ reduce using rule 28 (EXP -> VALUE > VALUE .) ]


state 76

    (29) EXP -> VALUE menorIgual VALUE .
    (23) EXP -> VALUE . + VALUE
    (24) EXP -> VALUE . - VALUE
    (25) EXP -> VALUE . / VALUE
    (26) EXP -> VALUE . * VALUE
    (27) EXP -> VALUE . < VALUE
    (28) EXP -> VALUE . > VALUE
    (29) EXP -> VALUE . menorIgual VALUE
    (30) EXP -> VALUE . maiorIgual VALUE
    (31) EXP -> VALUE . diferente VALUE
    (32) EXP -> VALUE . = VALUE
    (35) BOOL -> VALUE . e VALUE
    (36) BOOL -> VALUE . ou VALUE

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for > resolved as shift
  ! shift/reduce conflict for menorIgual resolved as shift
  ! shift/reduce conflict for maiorIgual resolved as shift
  ! shift/reduce conflict for diferente resolved as shift
  ! shift/reduce conflict for = resolved as shift
  ! shift/reduce conflict for e resolved as shift
  ! shift/reduce conflict for ou resolved as shift
    nomeVariavel    reduce using rule 29 (EXP -> VALUE menorIgual VALUE .)
    se              reduce using rule 29 (EXP -> VALUE menorIgual VALUE .)
    para            reduce using rule 29 (EXP -> VALUE menorIgual VALUE .)
    enquanto        reduce using rule 29 (EXP -> VALUE menorIgual VALUE .)
    leia            reduce using rule 29 (EXP -> VALUE menorIgual VALUE .)
    entao           reduce using rule 29 (EXP -> VALUE menorIgual VALUE .)
    ;               reduce using rule 29 (EXP -> VALUE menorIgual VALUE .)
    ate             reduce using rule 29 (EXP -> VALUE menorIgual VALUE .)
    passo           reduce using rule 29 (EXP -> VALUE menorIgual VALUE .)
    +               shift and go to state 49
    -               shift and go to state 50
    /               shift and go to state 51
    *               shift and go to state 52
    <               shift and go to state 53
    >               shift and go to state 54
    menorIgual      shift and go to state 55
    maiorIgual      shift and go to state 56
    diferente       shift and go to state 57
    =               shift and go to state 58
    e               shift and go to state 59
    ou              shift and go to state 60

  ! +               [ reduce using rule 29 (EXP -> VALUE menorIgual VALUE .) ]
  ! -               [ reduce using rule 29 (EXP -> VALUE menorIgual VALUE .) ]
  ! /               [ reduce using rule 29 (EXP -> VALUE menorIgual VALUE .) ]
  ! *               [ reduce using rule 29 (EXP -> VALUE menorIgual VALUE .) ]
  ! <               [ reduce using rule 29 (EXP -> VALUE menorIgual VALUE .) ]
  ! >               [ reduce using rule 29 (EXP -> VALUE menorIgual VALUE .) ]
  ! menorIgual      [ reduce using rule 29 (EXP -> VALUE menorIgual VALUE .) ]
  ! maiorIgual      [ reduce using rule 29 (EXP -> VALUE menorIgual VALUE .) ]
  ! diferente       [ reduce using rule 29 (EXP -> VALUE menorIgual VALUE .) ]
  ! =               [ reduce using rule 29 (EXP -> VALUE menorIgual VALUE .) ]
  ! e               [ reduce using rule 29 (EXP -> VALUE menorIgual VALUE .) ]
  ! ou              [ reduce using rule 29 (EXP -> VALUE menorIgual VALUE .) ]


state 77

    (30) EXP -> VALUE maiorIgual VALUE .
    (23) EXP -> VALUE . + VALUE
    (24) EXP -> VALUE . - VALUE
    (25) EXP -> VALUE . / VALUE
    (26) EXP -> VALUE . * VALUE
    (27) EXP -> VALUE . < VALUE
    (28) EXP -> VALUE . > VALUE
    (29) EXP -> VALUE . menorIgual VALUE
    (30) EXP -> VALUE . maiorIgual VALUE
    (31) EXP -> VALUE . diferente VALUE
    (32) EXP -> VALUE . = VALUE
    (35) BOOL -> VALUE . e VALUE
    (36) BOOL -> VALUE . ou VALUE

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for > resolved as shift
  ! shift/reduce conflict for menorIgual resolved as shift
  ! shift/reduce conflict for maiorIgual resolved as shift
  ! shift/reduce conflict for diferente resolved as shift
  ! shift/reduce conflict for = resolved as shift
  ! shift/reduce conflict for e resolved as shift
  ! shift/reduce conflict for ou resolved as shift
    nomeVariavel    reduce using rule 30 (EXP -> VALUE maiorIgual VALUE .)
    se              reduce using rule 30 (EXP -> VALUE maiorIgual VALUE .)
    para            reduce using rule 30 (EXP -> VALUE maiorIgual VALUE .)
    enquanto        reduce using rule 30 (EXP -> VALUE maiorIgual VALUE .)
    leia            reduce using rule 30 (EXP -> VALUE maiorIgual VALUE .)
    entao           reduce using rule 30 (EXP -> VALUE maiorIgual VALUE .)
    ;               reduce using rule 30 (EXP -> VALUE maiorIgual VALUE .)
    ate             reduce using rule 30 (EXP -> VALUE maiorIgual VALUE .)
    passo           reduce using rule 30 (EXP -> VALUE maiorIgual VALUE .)
    +               shift and go to state 49
    -               shift and go to state 50
    /               shift and go to state 51
    *               shift and go to state 52
    <               shift and go to state 53
    >               shift and go to state 54
    menorIgual      shift and go to state 55
    maiorIgual      shift and go to state 56
    diferente       shift and go to state 57
    =               shift and go to state 58
    e               shift and go to state 59
    ou              shift and go to state 60

  ! +               [ reduce using rule 30 (EXP -> VALUE maiorIgual VALUE .) ]
  ! -               [ reduce using rule 30 (EXP -> VALUE maiorIgual VALUE .) ]
  ! /               [ reduce using rule 30 (EXP -> VALUE maiorIgual VALUE .) ]
  ! *               [ reduce using rule 30 (EXP -> VALUE maiorIgual VALUE .) ]
  ! <               [ reduce using rule 30 (EXP -> VALUE maiorIgual VALUE .) ]
  ! >               [ reduce using rule 30 (EXP -> VALUE maiorIgual VALUE .) ]
  ! menorIgual      [ reduce using rule 30 (EXP -> VALUE maiorIgual VALUE .) ]
  ! maiorIgual      [ reduce using rule 30 (EXP -> VALUE maiorIgual VALUE .) ]
  ! diferente       [ reduce using rule 30 (EXP -> VALUE maiorIgual VALUE .) ]
  ! =               [ reduce using rule 30 (EXP -> VALUE maiorIgual VALUE .) ]
  ! e               [ reduce using rule 30 (EXP -> VALUE maiorIgual VALUE .) ]
  ! ou              [ reduce using rule 30 (EXP -> VALUE maiorIgual VALUE .) ]


state 78

    (31) EXP -> VALUE diferente VALUE .
    (23) EXP -> VALUE . + VALUE
    (24) EXP -> VALUE . - VALUE
    (25) EXP -> VALUE . / VALUE
    (26) EXP -> VALUE . * VALUE
    (27) EXP -> VALUE . < VALUE
    (28) EXP -> VALUE . > VALUE
    (29) EXP -> VALUE . menorIgual VALUE
    (30) EXP -> VALUE . maiorIgual VALUE
    (31) EXP -> VALUE . diferente VALUE
    (32) EXP -> VALUE . = VALUE
    (35) BOOL -> VALUE . e VALUE
    (36) BOOL -> VALUE . ou VALUE

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for > resolved as shift
  ! shift/reduce conflict for menorIgual resolved as shift
  ! shift/reduce conflict for maiorIgual resolved as shift
  ! shift/reduce conflict for diferente resolved as shift
  ! shift/reduce conflict for = resolved as shift
  ! shift/reduce conflict for e resolved as shift
  ! shift/reduce conflict for ou resolved as shift
    nomeVariavel    reduce using rule 31 (EXP -> VALUE diferente VALUE .)
    se              reduce using rule 31 (EXP -> VALUE diferente VALUE .)
    para            reduce using rule 31 (EXP -> VALUE diferente VALUE .)
    enquanto        reduce using rule 31 (EXP -> VALUE diferente VALUE .)
    leia            reduce using rule 31 (EXP -> VALUE diferente VALUE .)
    entao           reduce using rule 31 (EXP -> VALUE diferente VALUE .)
    ;               reduce using rule 31 (EXP -> VALUE diferente VALUE .)
    ate             reduce using rule 31 (EXP -> VALUE diferente VALUE .)
    passo           reduce using rule 31 (EXP -> VALUE diferente VALUE .)
    +               shift and go to state 49
    -               shift and go to state 50
    /               shift and go to state 51
    *               shift and go to state 52
    <               shift and go to state 53
    >               shift and go to state 54
    menorIgual      shift and go to state 55
    maiorIgual      shift and go to state 56
    diferente       shift and go to state 57
    =               shift and go to state 58
    e               shift and go to state 59
    ou              shift and go to state 60

  ! +               [ reduce using rule 31 (EXP -> VALUE diferente VALUE .) ]
  ! -               [ reduce using rule 31 (EXP -> VALUE diferente VALUE .) ]
  ! /               [ reduce using rule 31 (EXP -> VALUE diferente VALUE .) ]
  ! *               [ reduce using rule 31 (EXP -> VALUE diferente VALUE .) ]
  ! <               [ reduce using rule 31 (EXP -> VALUE diferente VALUE .) ]
  ! >               [ reduce using rule 31 (EXP -> VALUE diferente VALUE .) ]
  ! menorIgual      [ reduce using rule 31 (EXP -> VALUE diferente VALUE .) ]
  ! maiorIgual      [ reduce using rule 31 (EXP -> VALUE diferente VALUE .) ]
  ! diferente       [ reduce using rule 31 (EXP -> VALUE diferente VALUE .) ]
  ! =               [ reduce using rule 31 (EXP -> VALUE diferente VALUE .) ]
  ! e               [ reduce using rule 31 (EXP -> VALUE diferente VALUE .) ]
  ! ou              [ reduce using rule 31 (EXP -> VALUE diferente VALUE .) ]


state 79

    (32) EXP -> VALUE = VALUE .
    (23) EXP -> VALUE . + VALUE
    (24) EXP -> VALUE . - VALUE
    (25) EXP -> VALUE . / VALUE
    (26) EXP -> VALUE . * VALUE
    (27) EXP -> VALUE . < VALUE
    (28) EXP -> VALUE . > VALUE
    (29) EXP -> VALUE . menorIgual VALUE
    (30) EXP -> VALUE . maiorIgual VALUE
    (31) EXP -> VALUE . diferente VALUE
    (32) EXP -> VALUE . = VALUE
    (35) BOOL -> VALUE . e VALUE
    (36) BOOL -> VALUE . ou VALUE

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for > resolved as shift
  ! shift/reduce conflict for menorIgual resolved as shift
  ! shift/reduce conflict for maiorIgual resolved as shift
  ! shift/reduce conflict for diferente resolved as shift
  ! shift/reduce conflict for = resolved as shift
  ! shift/reduce conflict for e resolved as shift
  ! shift/reduce conflict for ou resolved as shift
    nomeVariavel    reduce using rule 32 (EXP -> VALUE = VALUE .)
    se              reduce using rule 32 (EXP -> VALUE = VALUE .)
    para            reduce using rule 32 (EXP -> VALUE = VALUE .)
    enquanto        reduce using rule 32 (EXP -> VALUE = VALUE .)
    leia            reduce using rule 32 (EXP -> VALUE = VALUE .)
    entao           reduce using rule 32 (EXP -> VALUE = VALUE .)
    ;               reduce using rule 32 (EXP -> VALUE = VALUE .)
    ate             reduce using rule 32 (EXP -> VALUE = VALUE .)
    passo           reduce using rule 32 (EXP -> VALUE = VALUE .)
    +               shift and go to state 49
    -               shift and go to state 50
    /               shift and go to state 51
    *               shift and go to state 52
    <               shift and go to state 53
    >               shift and go to state 54
    menorIgual      shift and go to state 55
    maiorIgual      shift and go to state 56
    diferente       shift and go to state 57
    =               shift and go to state 58
    e               shift and go to state 59
    ou              shift and go to state 60

  ! +               [ reduce using rule 32 (EXP -> VALUE = VALUE .) ]
  ! -               [ reduce using rule 32 (EXP -> VALUE = VALUE .) ]
  ! /               [ reduce using rule 32 (EXP -> VALUE = VALUE .) ]
  ! *               [ reduce using rule 32 (EXP -> VALUE = VALUE .) ]
  ! <               [ reduce using rule 32 (EXP -> VALUE = VALUE .) ]
  ! >               [ reduce using rule 32 (EXP -> VALUE = VALUE .) ]
  ! menorIgual      [ reduce using rule 32 (EXP -> VALUE = VALUE .) ]
  ! maiorIgual      [ reduce using rule 32 (EXP -> VALUE = VALUE .) ]
  ! diferente       [ reduce using rule 32 (EXP -> VALUE = VALUE .) ]
  ! =               [ reduce using rule 32 (EXP -> VALUE = VALUE .) ]
  ! e               [ reduce using rule 32 (EXP -> VALUE = VALUE .) ]
  ! ou              [ reduce using rule 32 (EXP -> VALUE = VALUE .) ]


state 80

    (35) BOOL -> VALUE e VALUE .
    (23) EXP -> VALUE . + VALUE
    (24) EXP -> VALUE . - VALUE
    (25) EXP -> VALUE . / VALUE
    (26) EXP -> VALUE . * VALUE
    (27) EXP -> VALUE . < VALUE
    (28) EXP -> VALUE . > VALUE
    (29) EXP -> VALUE . menorIgual VALUE
    (30) EXP -> VALUE . maiorIgual VALUE
    (31) EXP -> VALUE . diferente VALUE
    (32) EXP -> VALUE . = VALUE
    (35) BOOL -> VALUE . e VALUE
    (36) BOOL -> VALUE . ou VALUE

    +               reduce using rule 35 (BOOL -> VALUE e VALUE .)
    -               reduce using rule 35 (BOOL -> VALUE e VALUE .)
    /               reduce using rule 35 (BOOL -> VALUE e VALUE .)
    *               reduce using rule 35 (BOOL -> VALUE e VALUE .)
    <               reduce using rule 35 (BOOL -> VALUE e VALUE .)
    >               reduce using rule 35 (BOOL -> VALUE e VALUE .)
    menorIgual      reduce using rule 35 (BOOL -> VALUE e VALUE .)
    maiorIgual      reduce using rule 35 (BOOL -> VALUE e VALUE .)
    diferente       reduce using rule 35 (BOOL -> VALUE e VALUE .)
    =               reduce using rule 35 (BOOL -> VALUE e VALUE .)
    e               reduce using rule 35 (BOOL -> VALUE e VALUE .)
    ou              reduce using rule 35 (BOOL -> VALUE e VALUE .)
    nomeVariavel    reduce using rule 35 (BOOL -> VALUE e VALUE .)
    se              reduce using rule 35 (BOOL -> VALUE e VALUE .)
    para            reduce using rule 35 (BOOL -> VALUE e VALUE .)
    enquanto        reduce using rule 35 (BOOL -> VALUE e VALUE .)
    leia            reduce using rule 35 (BOOL -> VALUE e VALUE .)
    entao           reduce using rule 35 (BOOL -> VALUE e VALUE .)
    ;               reduce using rule 35 (BOOL -> VALUE e VALUE .)
    ate             reduce using rule 35 (BOOL -> VALUE e VALUE .)
    passo           reduce using rule 35 (BOOL -> VALUE e VALUE .)

  ! +               [ shift and go to state 49 ]
  ! -               [ shift and go to state 50 ]
  ! /               [ shift and go to state 51 ]
  ! *               [ shift and go to state 52 ]
  ! <               [ shift and go to state 53 ]
  ! >               [ shift and go to state 54 ]
  ! menorIgual      [ shift and go to state 55 ]
  ! maiorIgual      [ shift and go to state 56 ]
  ! diferente       [ shift and go to state 57 ]
  ! =               [ shift and go to state 58 ]
  ! e               [ shift and go to state 59 ]
  ! ou              [ shift and go to state 60 ]


state 81

    (36) BOOL -> VALUE ou VALUE .
    (23) EXP -> VALUE . + VALUE
    (24) EXP -> VALUE . - VALUE
    (25) EXP -> VALUE . / VALUE
    (26) EXP -> VALUE . * VALUE
    (27) EXP -> VALUE . < VALUE
    (28) EXP -> VALUE . > VALUE
    (29) EXP -> VALUE . menorIgual VALUE
    (30) EXP -> VALUE . maiorIgual VALUE
    (31) EXP -> VALUE . diferente VALUE
    (32) EXP -> VALUE . = VALUE
    (35) BOOL -> VALUE . e VALUE
    (36) BOOL -> VALUE . ou VALUE

    +               reduce using rule 36 (BOOL -> VALUE ou VALUE .)
    -               reduce using rule 36 (BOOL -> VALUE ou VALUE .)
    /               reduce using rule 36 (BOOL -> VALUE ou VALUE .)
    *               reduce using rule 36 (BOOL -> VALUE ou VALUE .)
    <               reduce using rule 36 (BOOL -> VALUE ou VALUE .)
    >               reduce using rule 36 (BOOL -> VALUE ou VALUE .)
    menorIgual      reduce using rule 36 (BOOL -> VALUE ou VALUE .)
    maiorIgual      reduce using rule 36 (BOOL -> VALUE ou VALUE .)
    diferente       reduce using rule 36 (BOOL -> VALUE ou VALUE .)
    =               reduce using rule 36 (BOOL -> VALUE ou VALUE .)
    ou              reduce using rule 36 (BOOL -> VALUE ou VALUE .)
    nomeVariavel    reduce using rule 36 (BOOL -> VALUE ou VALUE .)
    se              reduce using rule 36 (BOOL -> VALUE ou VALUE .)
    para            reduce using rule 36 (BOOL -> VALUE ou VALUE .)
    enquanto        reduce using rule 36 (BOOL -> VALUE ou VALUE .)
    leia            reduce using rule 36 (BOOL -> VALUE ou VALUE .)
    entao           reduce using rule 36 (BOOL -> VALUE ou VALUE .)
    ;               reduce using rule 36 (BOOL -> VALUE ou VALUE .)
    ate             reduce using rule 36 (BOOL -> VALUE ou VALUE .)
    passo           reduce using rule 36 (BOOL -> VALUE ou VALUE .)
    e               shift and go to state 59

  ! e               [ reduce using rule 36 (BOOL -> VALUE ou VALUE .) ]
  ! +               [ shift and go to state 49 ]
  ! -               [ shift and go to state 50 ]
  ! /               [ shift and go to state 51 ]
  ! *               [ shift and go to state 52 ]
  ! <               [ shift and go to state 53 ]
  ! >               [ shift and go to state 54 ]
  ! menorIgual      [ shift and go to state 55 ]
  ! maiorIgual      [ shift and go to state 56 ]
  ! diferente       [ shift and go to state 57 ]
  ! =               [ shift and go to state 58 ]
  ! ou              [ shift and go to state 60 ]


state 82

    (46) FOR -> para ATRIBUICAO de VALUE . ate VALUE passo valorNumero faca CODE2 fim_para CODE
    (23) EXP -> VALUE . + VALUE
    (24) EXP -> VALUE . - VALUE
    (25) EXP -> VALUE . / VALUE
    (26) EXP -> VALUE . * VALUE
    (27) EXP -> VALUE . < VALUE
    (28) EXP -> VALUE . > VALUE
    (29) EXP -> VALUE . menorIgual VALUE
    (30) EXP -> VALUE . maiorIgual VALUE
    (31) EXP -> VALUE . diferente VALUE
    (32) EXP -> VALUE . = VALUE
    (35) BOOL -> VALUE . e VALUE
    (36) BOOL -> VALUE . ou VALUE

    ate             shift and go to state 88
    +               shift and go to state 49
    -               shift and go to state 50
    /               shift and go to state 51
    *               shift and go to state 52
    <               shift and go to state 53
    >               shift and go to state 54
    menorIgual      shift and go to state 55
    maiorIgual      shift and go to state 56
    diferente       shift and go to state 57
    =               shift and go to state 58
    e               shift and go to state 59
    ou              shift and go to state 60


state 83

    (47) WHILE -> enquanto VALUE entao CODE2 . fim_enquanto CODE

    fim_enquanto    shift and go to state 89


state 84

    (49) LEIA -> leia ( nomeVariavel ) . ; CODE

    ;               shift and go to state 90


state 85

    (17) ATRIBUICAO -> nomeVariavel assign VALUE ; CODE .

    $end            reduce using rule 17 (ATRIBUICAO -> nomeVariavel assign VALUE ; CODE .)
    de              reduce using rule 17 (ATRIBUICAO -> nomeVariavel assign VALUE ; CODE .)
    fim_se          reduce using rule 17 (ATRIBUICAO -> nomeVariavel assign VALUE ; CODE .)
    senao           reduce using rule 17 (ATRIBUICAO -> nomeVariavel assign VALUE ; CODE .)
    fim_enquanto    reduce using rule 17 (ATRIBUICAO -> nomeVariavel assign VALUE ; CODE .)
    fim_para        reduce using rule 17 (ATRIBUICAO -> nomeVariavel assign VALUE ; CODE .)


state 86

    (41) CONDICAO2 -> fim_se CODE .

    $end            reduce using rule 41 (CONDICAO2 -> fim_se CODE .)
    fim_se          reduce using rule 41 (CONDICAO2 -> fim_se CODE .)
    senao           reduce using rule 41 (CONDICAO2 -> fim_se CODE .)
    fim_enquanto    reduce using rule 41 (CONDICAO2 -> fim_se CODE .)
    de              reduce using rule 41 (CONDICAO2 -> fim_se CODE .)
    fim_para        reduce using rule 41 (CONDICAO2 -> fim_se CODE .)


state 87

    (43) SENAO -> senao CODE2 . fim_se CODE

    fim_se          shift and go to state 91


state 88

    (46) FOR -> para ATRIBUICAO de VALUE ate . VALUE passo valorNumero faca CODE2 fim_para CODE
    (18) VALUE -> . EXP
    (19) VALUE -> . STR
    (20) VALUE -> . BOOL
    (21) VALUE -> . nomeVariavel
    (22) EXP -> . valorNumero
    (23) EXP -> . VALUE + VALUE
    (24) EXP -> . VALUE - VALUE
    (25) EXP -> . VALUE / VALUE
    (26) EXP -> . VALUE * VALUE
    (27) EXP -> . VALUE < VALUE
    (28) EXP -> . VALUE > VALUE
    (29) EXP -> . VALUE menorIgual VALUE
    (30) EXP -> . VALUE maiorIgual VALUE
    (31) EXP -> . VALUE diferente VALUE
    (32) EXP -> . VALUE = VALUE
    (33) STR -> . valorString
    (34) BOOL -> . TNF
    (35) BOOL -> . VALUE e VALUE
    (36) BOOL -> . VALUE ou VALUE
    (37) TNF -> . verdadeiro
    (38) TNF -> . falso
    (39) TNF -> . nao TNF

    nomeVariavel    shift and go to state 37
    valorNumero     shift and go to state 38
    valorString     shift and go to state 39
    verdadeiro      shift and go to state 41
    falso           shift and go to state 42
    nao             shift and go to state 43

    VALUE                          shift and go to state 92
    EXP                            shift and go to state 34
    STR                            shift and go to state 35
    BOOL                           shift and go to state 36
    TNF                            shift and go to state 40

state 89

    (47) WHILE -> enquanto VALUE entao CODE2 fim_enquanto . CODE
    (11) CODE -> . CODE2
    (12) CODE -> . Fim
    (13) CODE2 -> . ATRIBUICAO
    (14) CODE2 -> . CONDICAO
    (15) CODE2 -> . CICLO
    (16) CODE2 -> . IO
    (17) ATRIBUICAO -> . nomeVariavel assign VALUE ; CODE
    (40) CONDICAO -> . se VALUE CODE2 CONDICAO2
    (44) CICLO -> . FOR
    (45) CICLO -> . WHILE
    (48) IO -> . LEIA
    (46) FOR -> . para ATRIBUICAO de VALUE ate VALUE passo valorNumero faca CODE2 fim_para CODE
    (47) WHILE -> . enquanto VALUE entao CODE2 fim_enquanto CODE
    (49) LEIA -> . leia ( nomeVariavel ) ; CODE

    Fim             shift and go to state 18
    nomeVariavel    shift and go to state 23
    se              shift and go to state 24
    para            shift and go to state 28
    enquanto        shift and go to state 29
    leia            shift and go to state 30

    CODE2                          shift and go to state 17
    CODE                           shift and go to state 93
    ATRIBUICAO                     shift and go to state 19
    CONDICAO                       shift and go to state 20
    CICLO                          shift and go to state 21
    IO                             shift and go to state 22
    FOR                            shift and go to state 25
    WHILE                          shift and go to state 26
    LEIA                           shift and go to state 27

state 90

    (49) LEIA -> leia ( nomeVariavel ) ; . CODE
    (11) CODE -> . CODE2
    (12) CODE -> . Fim
    (13) CODE2 -> . ATRIBUICAO
    (14) CODE2 -> . CONDICAO
    (15) CODE2 -> . CICLO
    (16) CODE2 -> . IO
    (17) ATRIBUICAO -> . nomeVariavel assign VALUE ; CODE
    (40) CONDICAO -> . se VALUE CODE2 CONDICAO2
    (44) CICLO -> . FOR
    (45) CICLO -> . WHILE
    (48) IO -> . LEIA
    (46) FOR -> . para ATRIBUICAO de VALUE ate VALUE passo valorNumero faca CODE2 fim_para CODE
    (47) WHILE -> . enquanto VALUE entao CODE2 fim_enquanto CODE
    (49) LEIA -> . leia ( nomeVariavel ) ; CODE

    Fim             shift and go to state 18
    nomeVariavel    shift and go to state 23
    se              shift and go to state 24
    para            shift and go to state 28
    enquanto        shift and go to state 29
    leia            shift and go to state 30

    CODE                           shift and go to state 94
    CODE2                          shift and go to state 17
    ATRIBUICAO                     shift and go to state 19
    CONDICAO                       shift and go to state 20
    CICLO                          shift and go to state 21
    IO                             shift and go to state 22
    FOR                            shift and go to state 25
    WHILE                          shift and go to state 26
    LEIA                           shift and go to state 27

state 91

    (43) SENAO -> senao CODE2 fim_se . CODE
    (11) CODE -> . CODE2
    (12) CODE -> . Fim
    (13) CODE2 -> . ATRIBUICAO
    (14) CODE2 -> . CONDICAO
    (15) CODE2 -> . CICLO
    (16) CODE2 -> . IO
    (17) ATRIBUICAO -> . nomeVariavel assign VALUE ; CODE
    (40) CONDICAO -> . se VALUE CODE2 CONDICAO2
    (44) CICLO -> . FOR
    (45) CICLO -> . WHILE
    (48) IO -> . LEIA
    (46) FOR -> . para ATRIBUICAO de VALUE ate VALUE passo valorNumero faca CODE2 fim_para CODE
    (47) WHILE -> . enquanto VALUE entao CODE2 fim_enquanto CODE
    (49) LEIA -> . leia ( nomeVariavel ) ; CODE

    Fim             shift and go to state 18
    nomeVariavel    shift and go to state 23
    se              shift and go to state 24
    para            shift and go to state 28
    enquanto        shift and go to state 29
    leia            shift and go to state 30

    CODE2                          shift and go to state 17
    CODE                           shift and go to state 95
    ATRIBUICAO                     shift and go to state 19
    CONDICAO                       shift and go to state 20
    CICLO                          shift and go to state 21
    IO                             shift and go to state 22
    FOR                            shift and go to state 25
    WHILE                          shift and go to state 26
    LEIA                           shift and go to state 27

state 92

    (46) FOR -> para ATRIBUICAO de VALUE ate VALUE . passo valorNumero faca CODE2 fim_para CODE
    (23) EXP -> VALUE . + VALUE
    (24) EXP -> VALUE . - VALUE
    (25) EXP -> VALUE . / VALUE
    (26) EXP -> VALUE . * VALUE
    (27) EXP -> VALUE . < VALUE
    (28) EXP -> VALUE . > VALUE
    (29) EXP -> VALUE . menorIgual VALUE
    (30) EXP -> VALUE . maiorIgual VALUE
    (31) EXP -> VALUE . diferente VALUE
    (32) EXP -> VALUE . = VALUE
    (35) BOOL -> VALUE . e VALUE
    (36) BOOL -> VALUE . ou VALUE

    passo           shift and go to state 96
    +               shift and go to state 49
    -               shift and go to state 50
    /               shift and go to state 51
    *               shift and go to state 52
    <               shift and go to state 53
    >               shift and go to state 54
    menorIgual      shift and go to state 55
    maiorIgual      shift and go to state 56
    diferente       shift and go to state 57
    =               shift and go to state 58
    e               shift and go to state 59
    ou              shift and go to state 60


state 93

    (47) WHILE -> enquanto VALUE entao CODE2 fim_enquanto CODE .

    $end            reduce using rule 47 (WHILE -> enquanto VALUE entao CODE2 fim_enquanto CODE .)
    fim_se          reduce using rule 47 (WHILE -> enquanto VALUE entao CODE2 fim_enquanto CODE .)
    senao           reduce using rule 47 (WHILE -> enquanto VALUE entao CODE2 fim_enquanto CODE .)
    fim_enquanto    reduce using rule 47 (WHILE -> enquanto VALUE entao CODE2 fim_enquanto CODE .)
    de              reduce using rule 47 (WHILE -> enquanto VALUE entao CODE2 fim_enquanto CODE .)
    fim_para        reduce using rule 47 (WHILE -> enquanto VALUE entao CODE2 fim_enquanto CODE .)


state 94

    (49) LEIA -> leia ( nomeVariavel ) ; CODE .

    $end            reduce using rule 49 (LEIA -> leia ( nomeVariavel ) ; CODE .)
    fim_se          reduce using rule 49 (LEIA -> leia ( nomeVariavel ) ; CODE .)
    senao           reduce using rule 49 (LEIA -> leia ( nomeVariavel ) ; CODE .)
    fim_enquanto    reduce using rule 49 (LEIA -> leia ( nomeVariavel ) ; CODE .)
    de              reduce using rule 49 (LEIA -> leia ( nomeVariavel ) ; CODE .)
    fim_para        reduce using rule 49 (LEIA -> leia ( nomeVariavel ) ; CODE .)


state 95

    (43) SENAO -> senao CODE2 fim_se CODE .

    $end            reduce using rule 43 (SENAO -> senao CODE2 fim_se CODE .)
    fim_se          reduce using rule 43 (SENAO -> senao CODE2 fim_se CODE .)
    senao           reduce using rule 43 (SENAO -> senao CODE2 fim_se CODE .)
    fim_enquanto    reduce using rule 43 (SENAO -> senao CODE2 fim_se CODE .)
    de              reduce using rule 43 (SENAO -> senao CODE2 fim_se CODE .)
    fim_para        reduce using rule 43 (SENAO -> senao CODE2 fim_se CODE .)


state 96

    (46) FOR -> para ATRIBUICAO de VALUE ate VALUE passo . valorNumero faca CODE2 fim_para CODE

    valorNumero     shift and go to state 97


state 97

    (46) FOR -> para ATRIBUICAO de VALUE ate VALUE passo valorNumero . faca CODE2 fim_para CODE

    faca            shift and go to state 98


state 98

    (46) FOR -> para ATRIBUICAO de VALUE ate VALUE passo valorNumero faca . CODE2 fim_para CODE
    (13) CODE2 -> . ATRIBUICAO
    (14) CODE2 -> . CONDICAO
    (15) CODE2 -> . CICLO
    (16) CODE2 -> . IO
    (17) ATRIBUICAO -> . nomeVariavel assign VALUE ; CODE
    (40) CONDICAO -> . se VALUE CODE2 CONDICAO2
    (44) CICLO -> . FOR
    (45) CICLO -> . WHILE
    (48) IO -> . LEIA
    (46) FOR -> . para ATRIBUICAO de VALUE ate VALUE passo valorNumero faca CODE2 fim_para CODE
    (47) WHILE -> . enquanto VALUE entao CODE2 fim_enquanto CODE
    (49) LEIA -> . leia ( nomeVariavel ) ; CODE

    nomeVariavel    shift and go to state 23
    se              shift and go to state 24
    para            shift and go to state 28
    enquanto        shift and go to state 29
    leia            shift and go to state 30

    ATRIBUICAO                     shift and go to state 19
    CODE2                          shift and go to state 99
    CONDICAO                       shift and go to state 20
    CICLO                          shift and go to state 21
    IO                             shift and go to state 22
    FOR                            shift and go to state 25
    WHILE                          shift and go to state 26
    LEIA                           shift and go to state 27

state 99

    (46) FOR -> para ATRIBUICAO de VALUE ate VALUE passo valorNumero faca CODE2 . fim_para CODE

    fim_para        shift and go to state 100


state 100

    (46) FOR -> para ATRIBUICAO de VALUE ate VALUE passo valorNumero faca CODE2 fim_para . CODE
    (11) CODE -> . CODE2
    (12) CODE -> . Fim
    (13) CODE2 -> . ATRIBUICAO
    (14) CODE2 -> . CONDICAO
    (15) CODE2 -> . CICLO
    (16) CODE2 -> . IO
    (17) ATRIBUICAO -> . nomeVariavel assign VALUE ; CODE
    (40) CONDICAO -> . se VALUE CODE2 CONDICAO2
    (44) CICLO -> . FOR
    (45) CICLO -> . WHILE
    (48) IO -> . LEIA
    (46) FOR -> . para ATRIBUICAO de VALUE ate VALUE passo valorNumero faca CODE2 fim_para CODE
    (47) WHILE -> . enquanto VALUE entao CODE2 fim_enquanto CODE
    (49) LEIA -> . leia ( nomeVariavel ) ; CODE

    Fim             shift and go to state 18
    nomeVariavel    shift and go to state 23
    se              shift and go to state 24
    para            shift and go to state 28
    enquanto        shift and go to state 29
    leia            shift and go to state 30

    ATRIBUICAO                     shift and go to state 19
    CODE2                          shift and go to state 17
    CODE                           shift and go to state 101
    CONDICAO                       shift and go to state 20
    CICLO                          shift and go to state 21
    IO                             shift and go to state 22
    FOR                            shift and go to state 25
    WHILE                          shift and go to state 26
    LEIA                           shift and go to state 27

state 101

    (46) FOR -> para ATRIBUICAO de VALUE ate VALUE passo valorNumero faca CODE2 fim_para CODE .

    $end            reduce using rule 46 (FOR -> para ATRIBUICAO de VALUE ate VALUE passo valorNumero faca CODE2 fim_para CODE .)
    fim_se          reduce using rule 46 (FOR -> para ATRIBUICAO de VALUE ate VALUE passo valorNumero faca CODE2 fim_para CODE .)
    senao           reduce using rule 46 (FOR -> para ATRIBUICAO de VALUE ate VALUE passo valorNumero faca CODE2 fim_para CODE .)
    fim_enquanto    reduce using rule 46 (FOR -> para ATRIBUICAO de VALUE ate VALUE passo valorNumero faca CODE2 fim_para CODE .)
    de              reduce using rule 46 (FOR -> para ATRIBUICAO de VALUE ate VALUE passo valorNumero faca CODE2 fim_para CODE .)
    fim_para        reduce using rule 46 (FOR -> para ATRIBUICAO de VALUE ate VALUE passo valorNumero faca CODE2 fim_para CODE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for + in state 74 resolved as shift
WARNING: shift/reduce conflict for - in state 74 resolved as shift
WARNING: shift/reduce conflict for / in state 74 resolved as shift
WARNING: shift/reduce conflict for * in state 74 resolved as shift
WARNING: shift/reduce conflict for < in state 74 resolved as shift
WARNING: shift/reduce conflict for > in state 74 resolved as shift
WARNING: shift/reduce conflict for menorIgual in state 74 resolved as shift
WARNING: shift/reduce conflict for maiorIgual in state 74 resolved as shift
WARNING: shift/reduce conflict for diferente in state 74 resolved as shift
WARNING: shift/reduce conflict for = in state 74 resolved as shift
WARNING: shift/reduce conflict for e in state 74 resolved as shift
WARNING: shift/reduce conflict for ou in state 74 resolved as shift
WARNING: shift/reduce conflict for + in state 75 resolved as shift
WARNING: shift/reduce conflict for - in state 75 resolved as shift
WARNING: shift/reduce conflict for / in state 75 resolved as shift
WARNING: shift/reduce conflict for * in state 75 resolved as shift
WARNING: shift/reduce conflict for < in state 75 resolved as shift
WARNING: shift/reduce conflict for > in state 75 resolved as shift
WARNING: shift/reduce conflict for menorIgual in state 75 resolved as shift
WARNING: shift/reduce conflict for maiorIgual in state 75 resolved as shift
WARNING: shift/reduce conflict for diferente in state 75 resolved as shift
WARNING: shift/reduce conflict for = in state 75 resolved as shift
WARNING: shift/reduce conflict for e in state 75 resolved as shift
WARNING: shift/reduce conflict for ou in state 75 resolved as shift
WARNING: shift/reduce conflict for + in state 76 resolved as shift
WARNING: shift/reduce conflict for - in state 76 resolved as shift
WARNING: shift/reduce conflict for / in state 76 resolved as shift
WARNING: shift/reduce conflict for * in state 76 resolved as shift
WARNING: shift/reduce conflict for < in state 76 resolved as shift
WARNING: shift/reduce conflict for > in state 76 resolved as shift
WARNING: shift/reduce conflict for menorIgual in state 76 resolved as shift
WARNING: shift/reduce conflict for maiorIgual in state 76 resolved as shift
WARNING: shift/reduce conflict for diferente in state 76 resolved as shift
WARNING: shift/reduce conflict for = in state 76 resolved as shift
WARNING: shift/reduce conflict for e in state 76 resolved as shift
WARNING: shift/reduce conflict for ou in state 76 resolved as shift
WARNING: shift/reduce conflict for + in state 77 resolved as shift
WARNING: shift/reduce conflict for - in state 77 resolved as shift
WARNING: shift/reduce conflict for / in state 77 resolved as shift
WARNING: shift/reduce conflict for * in state 77 resolved as shift
WARNING: shift/reduce conflict for < in state 77 resolved as shift
WARNING: shift/reduce conflict for > in state 77 resolved as shift
WARNING: shift/reduce conflict for menorIgual in state 77 resolved as shift
WARNING: shift/reduce conflict for maiorIgual in state 77 resolved as shift
WARNING: shift/reduce conflict for diferente in state 77 resolved as shift
WARNING: shift/reduce conflict for = in state 77 resolved as shift
WARNING: shift/reduce conflict for e in state 77 resolved as shift
WARNING: shift/reduce conflict for ou in state 77 resolved as shift
WARNING: shift/reduce conflict for + in state 78 resolved as shift
WARNING: shift/reduce conflict for - in state 78 resolved as shift
WARNING: shift/reduce conflict for / in state 78 resolved as shift
WARNING: shift/reduce conflict for * in state 78 resolved as shift
WARNING: shift/reduce conflict for < in state 78 resolved as shift
WARNING: shift/reduce conflict for > in state 78 resolved as shift
WARNING: shift/reduce conflict for menorIgual in state 78 resolved as shift
WARNING: shift/reduce conflict for maiorIgual in state 78 resolved as shift
WARNING: shift/reduce conflict for diferente in state 78 resolved as shift
WARNING: shift/reduce conflict for = in state 78 resolved as shift
WARNING: shift/reduce conflict for e in state 78 resolved as shift
WARNING: shift/reduce conflict for ou in state 78 resolved as shift
WARNING: shift/reduce conflict for + in state 79 resolved as shift
WARNING: shift/reduce conflict for - in state 79 resolved as shift
WARNING: shift/reduce conflict for / in state 79 resolved as shift
WARNING: shift/reduce conflict for * in state 79 resolved as shift
WARNING: shift/reduce conflict for < in state 79 resolved as shift
WARNING: shift/reduce conflict for > in state 79 resolved as shift
WARNING: shift/reduce conflict for menorIgual in state 79 resolved as shift
WARNING: shift/reduce conflict for maiorIgual in state 79 resolved as shift
WARNING: shift/reduce conflict for diferente in state 79 resolved as shift
WARNING: shift/reduce conflict for = in state 79 resolved as shift
WARNING: shift/reduce conflict for e in state 79 resolved as shift
WARNING: shift/reduce conflict for ou in state 79 resolved as shift
