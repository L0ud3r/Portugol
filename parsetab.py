
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "leftorxorleftandleft<>left+-left*/rightuminusand assign ate de dif enquanto entao escreva faca false fim fimenquanto fimfuncao fimpara fimse funcao geq inicio leia leq not nr or para se senao string true var vartype xorportugol : func_list ';' inicio codeportugol : inicio declarar_list code declarar_list : declarar\n                            | declarar_list ';' declarar declarar : vartype ':' var_list func_list : func\n                    | func_list ';' func func : funcao var '(' args ')' com_list ';' fimfuncao  code : s  code : code ';' s   s : comando\n              | fim ciclo : para var de e ate e faca com_list ';' fimpara ciclo : enquanto n faca com_list ';' fimenquanto comando : e\n                    | ciclo  comando : var assign e  comando : escreva '(' e_list ')'  comando : leia '(' var_list ')' comando : se e entao com_list ';' senao com_list ';' fimsecomando : se e entao com_list ';' fimse com_list : comando\n                     | com_list ';' comando  e_list : e\n                   | e_list ',' e  e : var  e : '(' e ')'  e : b\n              | n\n              | string  e : var '(' e_list ')'\n              | var '(' ')'  n : nr\n              | '-' e  %prec uminus   n : '(' n ')'  n : e '+' e\n              | e '-' e\n              | e '*' e\n              | e '/' e n : e '<' e\n              | e leq e\n              | e '>' e\n              | e geq e\n              | e '=' e\n              | e dif e b : f\n              | e or e\n              | e and e\n              | e xor e  f : true  f : false  f : not f  var_list : var\n                     | var_list ',' var  args :\n                 | var_list "
    
_lr_action_items = {'inicio':([0,6,],[3,11,]),'funcao':([0,6,],[5,5,]),'$end':([1,13,15,16,17,18,19,20,25,26,27,30,31,33,34,38,59,66,67,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,88,91,92,99,101,102,115,118,124,126,],[0,-2,-9,-11,-12,-15,-16,-26,-28,-29,-30,-46,-33,-50,-51,-1,-26,-34,-52,-10,-47,-48,-49,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-17,-32,-27,-35,-31,-18,-19,-21,-14,-20,-13,]),';':([2,4,7,8,12,13,15,16,17,18,19,20,25,26,27,30,31,33,34,38,40,59,66,67,68,69,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,88,91,92,99,101,102,103,104,106,107,108,115,116,118,119,120,123,124,126,],[6,-6,14,-3,-7,39,-9,-11,-12,-15,-16,-26,-28,-29,-30,-46,-33,-50,-51,39,-4,-26,-34,-52,-5,-53,-10,-47,-48,-49,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-17,-32,-27,-35,-31,-18,-19,110,-22,112,-54,113,-21,-23,-14,-8,122,125,-20,-13,]),'vartype':([3,14,],[9,9,]),'var':([5,7,8,11,22,24,28,29,32,36,37,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,60,65,68,69,94,95,96,97,98,100,107,110,111,112,113,114,121,122,125,],[10,20,-3,20,59,59,62,59,59,69,69,20,-4,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,69,59,-5,-53,20,59,20,107,20,59,-54,20,59,20,20,20,20,20,20,]),'fim':([7,8,11,39,40,68,69,107,],[17,-3,17,17,-4,-5,-53,-54,]),'escreva':([7,8,11,39,40,68,69,94,96,98,107,110,112,113,114,121,122,125,],[21,-3,21,21,-4,-5,-53,21,21,21,-54,21,21,21,21,21,21,21,]),'leia':([7,8,11,39,40,68,69,94,96,98,107,110,112,113,114,121,122,125,],[23,-3,23,23,-4,-5,-53,23,23,23,-54,23,23,23,23,23,23,23,]),'se':([7,8,11,39,40,68,69,94,96,98,107,110,112,113,114,121,122,125,],[24,-3,24,24,-4,-5,-53,24,24,24,-54,24,24,24,24,24,24,24,]),'(':([7,8,10,11,20,21,22,23,24,29,32,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,59,65,68,69,94,95,96,98,100,107,110,111,112,113,114,121,122,125,],[22,-3,37,22,55,56,22,60,22,65,22,22,-4,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,55,65,-5,-53,22,22,22,22,22,-54,22,22,22,22,22,22,22,22,]),'string':([7,8,11,22,24,29,32,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,65,68,69,94,95,96,98,100,107,110,111,112,113,114,121,122,125,],[27,-3,27,27,27,27,27,27,-4,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,-5,-53,27,27,27,27,27,-54,27,27,27,27,27,27,27,27,]),'para':([7,8,11,39,40,68,69,94,96,98,107,110,112,113,114,121,122,125,],[28,-3,28,28,-4,-5,-53,28,28,28,-54,28,28,28,28,28,28,28,]),'enquanto':([7,8,11,39,40,68,69,94,96,98,107,110,112,113,114,121,122,125,],[29,-3,29,29,-4,-5,-53,29,29,29,-54,29,29,29,29,29,29,29,]),'nr':([7,8,11,22,24,29,32,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,65,68,69,94,95,96,98,100,107,110,111,112,113,114,121,122,125,],[31,-3,31,31,31,31,31,31,-4,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,-5,-53,31,31,31,31,31,-54,31,31,31,31,31,31,31,31,]),'-':([7,8,11,18,20,22,24,25,26,27,29,30,31,32,33,34,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,61,63,64,65,66,67,68,69,73,74,75,76,77,78,79,80,81,82,83,84,85,86,88,89,91,92,94,95,96,98,99,100,105,107,109,110,111,112,113,114,117,121,122,125,],[32,-3,32,45,-26,32,32,-28,-29,-30,32,-46,-33,32,-50,-51,32,-4,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,45,-29,-26,45,-29,45,32,-34,-52,-5,-53,45,45,45,-36,-37,-38,-39,45,45,45,45,45,45,45,-32,45,-27,-35,32,32,32,32,-31,32,45,-54,45,32,32,32,32,32,45,32,32,32,]),'true':([7,8,11,22,24,29,32,35,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,65,68,69,94,95,96,98,100,107,110,111,112,113,114,121,122,125,],[33,-3,33,33,33,33,33,33,33,-4,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,-5,-53,33,33,33,33,33,-54,33,33,33,33,33,33,33,33,]),'false':([7,8,11,22,24,29,32,35,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,65,68,69,94,95,96,98,100,107,110,111,112,113,114,121,122,125,],[34,-3,34,34,34,34,34,34,34,-4,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,-5,-53,34,34,34,34,34,-54,34,34,34,34,34,34,34,34,]),'not':([7,8,11,22,24,29,32,35,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,65,68,69,94,95,96,98,100,107,110,111,112,113,114,121,122,125,],[35,-3,35,35,35,35,35,35,35,-4,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,-5,-53,35,35,35,35,35,-54,35,35,35,35,35,35,35,35,]),':':([9,],[36,]),'or':([18,20,25,26,27,30,31,33,34,57,58,59,61,63,64,66,67,73,74,75,76,77,78,79,80,81,82,83,84,85,86,88,89,91,92,99,105,109,117,],[41,-26,-28,-29,-30,-46,-33,-50,-51,41,-29,-26,41,-29,41,-34,-52,-47,-48,-49,-36,-37,-38,-39,-40,41,-42,41,41,41,41,-32,41,-27,-35,-31,41,41,41,]),'and':([18,20,25,26,27,30,31,33,34,57,58,59,61,63,64,66,67,73,74,75,76,77,78,79,80,81,82,83,84,85,86,88,89,91,92,99,105,109,117,],[42,-26,-28,-29,-30,-46,-33,-50,-51,42,-29,-26,42,-29,42,-34,-52,42,-48,42,-36,-37,-38,-39,-40,42,-42,42,42,42,42,-32,42,-27,-35,-31,42,42,42,]),'xor':([18,20,25,26,27,30,31,33,34,57,58,59,61,63,64,66,67,73,74,75,76,77,78,79,80,81,82,83,84,85,86,88,89,91,92,99,105,109,117,],[43,-26,-28,-29,-30,-46,-33,-50,-51,43,-29,-26,43,-29,43,-34,-52,-47,-48,-49,-36,-37,-38,-39,-40,43,-42,43,43,43,43,-32,43,-27,-35,-31,43,43,43,]),'+':([18,20,25,26,27,30,31,33,34,57,58,59,61,63,64,66,67,73,74,75,76,77,78,79,80,81,82,83,84,85,86,88,89,91,92,99,105,109,117,],[44,-26,-28,-29,-30,-46,-33,-50,-51,44,-29,-26,44,-29,44,-34,-52,44,44,44,-36,-37,-38,-39,44,44,44,44,44,44,44,-32,44,-27,-35,-31,44,44,44,]),'*':([18,20,25,26,27,30,31,33,34,57,58,59,61,63,64,66,67,73,74,75,76,77,78,79,80,81,82,83,84,85,86,88,89,91,92,99,105,109,117,],[46,-26,-28,-29,-30,-46,-33,-50,-51,46,-29,-26,46,-29,46,-34,-52,46,46,46,46,46,-38,-39,46,46,46,46,46,46,46,-32,46,-27,-35,-31,46,46,46,]),'/':([18,20,25,26,27,30,31,33,34,57,58,59,61,63,64,66,67,73,74,75,76,77,78,79,80,81,82,83,84,85,86,88,89,91,92,99,105,109,117,],[47,-26,-28,-29,-30,-46,-33,-50,-51,47,-29,-26,47,-29,47,-34,-52,47,47,47,47,47,-38,-39,47,47,47,47,47,47,47,-32,47,-27,-35,-31,47,47,47,]),'<':([18,20,25,26,27,30,31,33,34,57,58,59,61,63,64,66,67,73,74,75,76,77,78,79,80,81,82,83,84,85,86,88,89,91,92,99,105,109,117,],[48,-26,-28,-29,-30,-46,-33,-50,-51,48,-29,-26,48,-29,48,-34,-52,48,48,48,-36,-37,-38,-39,-40,48,-42,48,48,48,48,-32,48,-27,-35,-31,48,48,48,]),'leq':([18,20,25,26,27,30,31,33,34,57,58,59,61,63,64,66,67,73,74,75,76,77,78,79,80,81,82,83,84,85,86,88,89,91,92,99,105,109,117,],[49,-26,-28,-29,-30,-46,-33,-50,-51,49,-29,-26,49,-29,49,-34,-52,-47,-48,-49,-36,-37,-38,-39,-40,49,-42,49,49,49,49,-32,49,-27,-35,-31,49,49,49,]),'>':([18,20,25,26,27,30,31,33,34,57,58,59,61,63,64,66,67,73,74,75,76,77,78,79,80,81,82,83,84,85,86,88,89,91,92,99,105,109,117,],[50,-26,-28,-29,-30,-46,-33,-50,-51,50,-29,-26,50,-29,50,-34,-52,50,50,50,-36,-37,-38,-39,-40,50,-42,50,50,50,50,-32,50,-27,-35,-31,50,50,50,]),'geq':([18,20,25,26,27,30,31,33,34,57,58,59,61,63,64,66,67,73,74,75,76,77,78,79,80,81,82,83,84,85,86,88,89,91,92,99,105,109,117,],[51,-26,-28,-29,-30,-46,-33,-50,-51,51,-29,-26,51,-29,51,-34,-52,-47,-48,-49,-36,-37,-38,-39,-40,51,-42,51,51,51,51,-32,51,-27,-35,-31,51,51,51,]),'=':([18,20,25,26,27,30,31,33,34,57,58,59,61,63,64,66,67,73,74,75,76,77,78,79,80,81,82,83,84,85,86,88,89,91,92,99,105,109,117,],[52,-26,-28,-29,-30,-46,-33,-50,-51,52,-29,-26,52,-29,52,-34,-52,-47,-48,-49,-36,-37,-38,-39,-40,52,-42,52,52,52,52,-32,52,-27,-35,-31,52,52,52,]),'dif':([18,20,25,26,27,30,31,33,34,57,58,59,61,63,64,66,67,73,74,75,76,77,78,79,80,81,82,83,84,85,86,88,89,91,92,99,105,109,117,],[53,-26,-28,-29,-30,-46,-33,-50,-51,53,-29,-26,53,-29,53,-34,-52,-47,-48,-49,-36,-37,-38,-39,-40,53,-42,53,53,53,53,-32,53,-27,-35,-31,53,53,53,]),'assign':([20,],[54,]),')':([25,26,27,30,31,33,34,37,55,57,58,59,66,67,69,70,71,73,74,75,76,77,78,79,80,81,82,83,84,85,87,88,89,90,91,92,93,99,107,109,],[-28,-29,-30,-46,-33,-50,-51,-55,88,91,92,-26,-34,-52,-53,98,-56,-47,-48,-49,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,99,-32,-24,101,-27,-35,102,-31,-54,-25,]),'entao':([25,26,27,30,31,33,34,59,61,66,67,73,74,75,76,77,78,79,80,81,82,83,84,85,88,91,92,99,],[-28,-29,-30,-46,-33,-50,-51,-26,94,-34,-52,-47,-48,-49,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-32,-27,-35,-31,]),'faca':([25,26,27,30,31,33,34,59,63,66,67,73,74,75,76,77,78,79,80,81,82,83,84,85,88,91,92,99,117,],[-28,-29,-30,-46,-33,-50,-51,-26,96,-34,-52,-47,-48,-49,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-32,-27,-35,-31,121,]),',':([25,26,27,30,31,33,34,59,66,67,68,69,71,73,74,75,76,77,78,79,80,81,82,83,84,85,87,88,89,90,91,92,93,99,107,109,],[-28,-29,-30,-46,-33,-50,-51,-26,-34,-52,97,-53,97,-47,-48,-49,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,100,-32,-24,100,-27,-35,97,-31,-54,-25,]),'ate':([25,26,27,30,31,33,34,59,66,67,73,74,75,76,77,78,79,80,81,82,83,84,85,88,91,92,99,105,],[-28,-29,-30,-46,-33,-50,-51,-26,-34,-52,-47,-48,-49,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-32,-27,-35,-31,111,]),'de':([62,],[95,]),'senao':([110,],[114,]),'fimse':([110,122,],[115,124,]),'fimenquanto':([112,],[118,]),'fimfuncao':([113,],[119,]),'fimpara':([125,],[126,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'portugol':([0,],[1,]),'func_list':([0,],[2,]),'func':([0,6,],[4,12,]),'declarar_list':([3,],[7,]),'declarar':([3,14,],[8,40,]),'code':([7,11,],[13,38,]),'s':([7,11,39,],[15,15,72,]),'comando':([7,11,39,94,96,98,110,112,113,114,121,122,125,],[16,16,16,104,104,104,116,116,116,104,104,116,116,]),'e':([7,11,22,24,29,32,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,65,94,95,96,98,100,110,111,112,113,114,121,122,125,],[18,18,57,61,64,66,18,73,74,75,76,77,78,79,80,81,82,83,84,85,86,89,89,57,18,105,18,18,109,18,117,18,18,18,18,18,18,]),'ciclo':([7,11,39,94,96,98,110,112,113,114,121,122,125,],[19,19,19,19,19,19,19,19,19,19,19,19,19,]),'b':([7,11,22,24,29,32,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,65,94,95,96,98,100,110,111,112,113,114,121,122,125,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'n':([7,11,22,24,29,32,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,65,94,95,96,98,100,110,111,112,113,114,121,122,125,],[26,26,58,26,63,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,58,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'f':([7,11,22,24,29,32,35,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,65,94,95,96,98,100,110,111,112,113,114,121,122,125,],[30,30,30,30,30,30,67,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'var_list':([36,37,60,],[68,71,93,]),'args':([37,],[70,]),'e_list':([55,56,],[87,90,]),'com_list':([94,96,98,114,121,],[103,106,108,120,123,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> portugol","S'",1,None,None,None),
  ('portugol -> func_list ; inicio code','portugol',4,'p_portugol','logic_grammar.py',44),
  ('portugol -> inicio declarar_list code','portugol',3,'p_portugol2','logic_grammar.py',49),
  ('declarar_list -> declarar','declarar_list',1,'p_declarar_list','logic_grammar.py',53),
  ('declarar_list -> declarar_list ; declarar','declarar_list',3,'p_declarar_list','logic_grammar.py',54),
  ('declarar -> vartype : var_list','declarar',3,'p_declarar','logic_grammar.py',63),
  ('func_list -> func','func_list',1,'p_func_list','logic_grammar.py',70),
  ('func_list -> func_list ; func','func_list',3,'p_func_list','logic_grammar.py',71),
  ('func -> funcao var ( args ) com_list ; fimfuncao','func',8,'p_func','logic_grammar.py',81),
  ('code -> s','code',1,'p_code1','logic_grammar.py',90),
  ('code -> code ; s','code',3,'p_code2','logic_grammar.py',95),
  ('s -> comando','s',1,'p_s','logic_grammar.py',100),
  ('s -> fim','s',1,'p_s','logic_grammar.py',101),
  ('ciclo -> para var de e ate e faca com_list ; fimpara','ciclo',10,'p_ciclo','logic_grammar.py',106),
  ('ciclo -> enquanto n faca com_list ; fimenquanto','ciclo',6,'p_ciclo2','logic_grammar.py',115),
  ('comando -> e','comando',1,'p_comando1','logic_grammar.py',124),
  ('comando -> ciclo','comando',1,'p_comando1','logic_grammar.py',125),
  ('comando -> var assign e','comando',3,'p_comando2','logic_grammar.py',130),
  ('comando -> escreva ( e_list )','comando',4,'p_comando3','logic_grammar.py',135),
  ('comando -> leia ( var_list )','comando',4,'p_comando4','logic_grammar.py',140),
  ('comando -> se e entao com_list ; senao com_list ; fimse','comando',9,'p_comando6','logic_grammar.py',145),
  ('comando -> se e entao com_list ; fimse','comando',6,'p_comando7','logic_grammar.py',152),
  ('com_list -> comando','com_list',1,'p_com_list','logic_grammar.py',159),
  ('com_list -> com_list ; comando','com_list',3,'p_com_list','logic_grammar.py',160),
  ('e_list -> e','e_list',1,'p_e_list','logic_grammar.py',169),
  ('e_list -> e_list , e','e_list',3,'p_e_list','logic_grammar.py',170),
  ('e -> var','e',1,'p_e1','logic_grammar.py',178),
  ('e -> ( e )','e',3,'p_e2','logic_grammar.py',183),
  ('e -> b','e',1,'p_e3','logic_grammar.py',188),
  ('e -> n','e',1,'p_e3','logic_grammar.py',189),
  ('e -> string','e',1,'p_e3','logic_grammar.py',190),
  ('e -> var ( e_list )','e',4,'p_e4','logic_grammar.py',195),
  ('e -> var ( )','e',3,'p_e4','logic_grammar.py',196),
  ('n -> nr','n',1,'p_n1','logic_grammar.py',203),
  ('n -> - e','n',2,'p_n1','logic_grammar.py',204),
  ('n -> ( n )','n',3,'p_n2','logic_grammar.py',209),
  ('n -> e + e','n',3,'p_n3','logic_grammar.py',214),
  ('n -> e - e','n',3,'p_n3','logic_grammar.py',215),
  ('n -> e * e','n',3,'p_n3','logic_grammar.py',216),
  ('n -> e / e','n',3,'p_n3','logic_grammar.py',217),
  ('n -> e < e','n',3,'p_n4','logic_grammar.py',222),
  ('n -> e leq e','n',3,'p_n4','logic_grammar.py',223),
  ('n -> e > e','n',3,'p_n4','logic_grammar.py',224),
  ('n -> e geq e','n',3,'p_n4','logic_grammar.py',225),
  ('n -> e = e','n',3,'p_n4','logic_grammar.py',226),
  ('n -> e dif e','n',3,'p_n4','logic_grammar.py',227),
  ('b -> f','b',1,'p_b1','logic_grammar.py',232),
  ('b -> e or e','b',3,'p_b1','logic_grammar.py',233),
  ('b -> e and e','b',3,'p_b1','logic_grammar.py',234),
  ('b -> e xor e','b',3,'p_b1','logic_grammar.py',235),
  ('f -> true','f',1,'p_f1','logic_grammar.py',243),
  ('f -> false','f',1,'p_f2','logic_grammar.py',248),
  ('f -> not f','f',2,'p_f3','logic_grammar.py',253),
  ('var_list -> var','var_list',1,'p_var_list','logic_grammar.py',258),
  ('var_list -> var_list , var','var_list',3,'p_var_list','logic_grammar.py',259),
  ('args -> <empty>','args',0,'p_args','logic_grammar.py',268),
  ('args -> var_list','args',1,'p_args','logic_grammar.py',269),
]
