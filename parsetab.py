
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "left+-left*/leftoulefteFim Inicio assign ate caracter de diferente e enquanto entao escreva faca falso fim_enquanto fim_para fim_se inteiro leia logico maiorIgual menorIgual nao nomeVariavel ou para passo real se senao valorNumero valorString verdadeiro PORTUGOL : Inicio INICIO  INICIO : DECLARACAO\n                    | Fim  DECLARACAO : TIPOVARIAVEL ':' DECLARACAO2 ';' CODE TIPOVARIAVEL : inteiro\n                        | real\n                        | logico\n                        | caracter DECLARACAO2 : nomeVariavel  DECLARACAO2 : nomeVariavel ',' DECLARACAO2  CODE : CODE2\n                 | Fim CODE2 : ATRIBUICAO\n                  | CONDICAO\n                  | CICLO\n                  | IO  ATRIBUICAO : nomeVariavel assign VALUE ';' CODE  VALUE : EXP\n                  | STR\n                  | BOOL\n                  | nomeVariavel EXP : valorNumero EXP : VALUE '+' VALUE\n               | VALUE '-' VALUE\n               | VALUE '/' VALUE\n               | VALUE '*' VALUE\n               | VALUE '<' VALUE\n               | VALUE '>' VALUE\n               | VALUE menorIgual VALUE\n               | VALUE maiorIgual VALUE\n               | VALUE diferente VALUE\n               | VALUE '=' VALUE STR : valorString  BOOL : TNF\n                 | VALUE e VALUE\n                 | VALUE ou VALUE  TNF : verdadeiro\n                | falso  TNF : nao TNF  CONDICAO : se VALUE CODE2 CONDICAO2  CONDICAO2 : fim_se CODE  CONDICAO2 : SENAO SENAO : senao CODE2 fim_se CODE  CICLO : FOR\n                    | WHILE  FOR : para ATRIBUICAO de VALUE ate VALUE passo valorNumero faca CODE2 fim_para CODE WHILE : enquanto VALUE entao CODE2 fim_enquanto CODE IO : LEIA LEIA : leia '(' nomeVariavel ')' ';' CODE"
    
_lr_action_items = {'Inicio':([0,],[2,]),'$end':([1,3,4,5,16,17,18,19,20,21,22,25,26,27,66,68,85,86,93,94,95,101,],[0,-1,-2,-3,-4,-11,-12,-13,-14,-15,-16,-44,-45,-48,-40,-42,-17,-41,-47,-49,-43,-46,]),'Fim':([2,14,65,67,89,90,91,100,],[5,18,18,18,18,18,18,18,]),'inteiro':([2,],[7,]),'real':([2,],[8,]),'logico':([2,],[9,]),'caracter':([2,],[10,]),':':([6,7,8,9,10,],[11,-5,-6,-7,-8,]),'nomeVariavel':([11,14,15,24,28,29,32,33,34,35,36,37,38,39,40,41,42,46,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,67,69,70,71,72,73,74,75,76,77,78,79,80,81,88,89,90,91,98,100,],[13,23,13,37,23,37,37,23,-18,-19,-20,-21,-22,-33,-34,-37,-38,64,37,37,37,37,37,37,37,37,37,37,37,37,-39,37,23,23,23,23,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-35,-36,37,23,23,23,23,23,]),';':([12,13,31,34,35,36,37,38,39,40,41,42,47,61,70,71,72,73,74,75,76,77,78,79,80,81,84,],[14,-9,-10,-18,-19,-20,-21,-22,-33,-34,-37,-38,65,-39,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-35,-36,90,]),',':([13,],[15,]),'se':([14,33,34,35,36,37,38,39,40,41,42,61,63,65,67,69,70,71,72,73,74,75,76,77,78,79,80,81,89,90,91,98,100,],[24,24,-18,-19,-20,-21,-22,-33,-34,-37,-38,-39,24,24,24,24,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-35,-36,24,24,24,24,24,]),'para':([14,33,34,35,36,37,38,39,40,41,42,61,63,65,67,69,70,71,72,73,74,75,76,77,78,79,80,81,89,90,91,98,100,],[28,28,-18,-19,-20,-21,-22,-33,-34,-37,-38,-39,28,28,28,28,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-35,-36,28,28,28,28,28,]),'enquanto':([14,33,34,35,36,37,38,39,40,41,42,61,63,65,67,69,70,71,72,73,74,75,76,77,78,79,80,81,89,90,91,98,100,],[29,29,-18,-19,-20,-21,-22,-33,-34,-37,-38,-39,29,29,29,29,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-35,-36,29,29,29,29,29,]),'leia':([14,33,34,35,36,37,38,39,40,41,42,61,63,65,67,69,70,71,72,73,74,75,76,77,78,79,80,81,89,90,91,98,100,],[30,30,-18,-19,-20,-21,-22,-33,-34,-37,-38,-39,30,30,30,30,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-35,-36,30,30,30,30,30,]),'fim_se':([17,18,19,20,21,22,25,26,27,48,66,68,85,86,87,93,94,95,101,],[-11,-12,-13,-14,-15,-16,-44,-45,-48,67,-40,-42,-17,-41,91,-47,-49,-43,-46,]),'senao':([17,18,19,20,21,22,25,26,27,48,66,68,85,86,93,94,95,101,],[-11,-12,-13,-14,-15,-16,-44,-45,-48,69,-40,-42,-17,-41,-47,-49,-43,-46,]),'fim_enquanto':([17,18,19,20,21,22,25,26,27,66,68,83,85,86,93,94,95,101,],[-11,-12,-13,-14,-15,-16,-44,-45,-48,-40,-42,89,-17,-41,-47,-49,-43,-46,]),'de':([17,18,19,20,21,22,25,26,27,44,66,68,85,86,93,94,95,101,],[-11,-12,-13,-14,-15,-16,-44,-45,-48,62,-40,-42,-17,-41,-47,-49,-43,-46,]),'fim_para':([17,18,19,20,21,22,25,26,27,66,68,85,86,93,94,95,99,101,],[-11,-12,-13,-14,-15,-16,-44,-45,-48,-40,-42,-17,-41,-47,-49,-43,100,-46,]),'assign':([23,],[32,]),'valorNumero':([24,29,32,49,50,51,52,53,54,55,56,57,58,59,60,62,88,96,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,97,]),'valorString':([24,29,32,49,50,51,52,53,54,55,56,57,58,59,60,62,88,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'verdadeiro':([24,29,32,43,49,50,51,52,53,54,55,56,57,58,59,60,62,88,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'falso':([24,29,32,43,49,50,51,52,53,54,55,56,57,58,59,60,62,88,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'nao':([24,29,32,43,49,50,51,52,53,54,55,56,57,58,59,60,62,88,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'(':([30,],[46,]),'+':([33,34,35,36,37,38,39,40,41,42,45,47,61,70,71,72,73,74,75,76,77,78,79,80,81,82,92,],[49,-18,-19,-20,-21,-22,-33,-34,-37,-38,49,49,-39,-23,-24,-25,-26,49,49,49,49,49,49,-35,-36,49,49,]),'-':([33,34,35,36,37,38,39,40,41,42,45,47,61,70,71,72,73,74,75,76,77,78,79,80,81,82,92,],[50,-18,-19,-20,-21,-22,-33,-34,-37,-38,50,50,-39,-23,-24,-25,-26,50,50,50,50,50,50,-35,-36,50,50,]),'/':([33,34,35,36,37,38,39,40,41,42,45,47,61,70,71,72,73,74,75,76,77,78,79,80,81,82,92,],[51,-18,-19,-20,-21,-22,-33,-34,-37,-38,51,51,-39,51,51,-25,-26,51,51,51,51,51,51,-35,-36,51,51,]),'*':([33,34,35,36,37,38,39,40,41,42,45,47,61,70,71,72,73,74,75,76,77,78,79,80,81,82,92,],[52,-18,-19,-20,-21,-22,-33,-34,-37,-38,52,52,-39,52,52,-25,-26,52,52,52,52,52,52,-35,-36,52,52,]),'<':([33,34,35,36,37,38,39,40,41,42,45,47,61,70,71,72,73,74,75,76,77,78,79,80,81,82,92,],[53,-18,-19,-20,-21,-22,-33,-34,-37,-38,53,53,-39,-23,-24,-25,-26,53,53,53,53,53,53,-35,-36,53,53,]),'>':([33,34,35,36,37,38,39,40,41,42,45,47,61,70,71,72,73,74,75,76,77,78,79,80,81,82,92,],[54,-18,-19,-20,-21,-22,-33,-34,-37,-38,54,54,-39,-23,-24,-25,-26,54,54,54,54,54,54,-35,-36,54,54,]),'menorIgual':([33,34,35,36,37,38,39,40,41,42,45,47,61,70,71,72,73,74,75,76,77,78,79,80,81,82,92,],[55,-18,-19,-20,-21,-22,-33,-34,-37,-38,55,55,-39,-23,-24,-25,-26,55,55,55,55,55,55,-35,-36,55,55,]),'maiorIgual':([33,34,35,36,37,38,39,40,41,42,45,47,61,70,71,72,73,74,75,76,77,78,79,80,81,82,92,],[56,-18,-19,-20,-21,-22,-33,-34,-37,-38,56,56,-39,-23,-24,-25,-26,56,56,56,56,56,56,-35,-36,56,56,]),'diferente':([33,34,35,36,37,38,39,40,41,42,45,47,61,70,71,72,73,74,75,76,77,78,79,80,81,82,92,],[57,-18,-19,-20,-21,-22,-33,-34,-37,-38,57,57,-39,-23,-24,-25,-26,57,57,57,57,57,57,-35,-36,57,57,]),'=':([33,34,35,36,37,38,39,40,41,42,45,47,61,70,71,72,73,74,75,76,77,78,79,80,81,82,92,],[58,-18,-19,-20,-21,-22,-33,-34,-37,-38,58,58,-39,-23,-24,-25,-26,58,58,58,58,58,58,-35,-36,58,58,]),'e':([33,34,35,36,37,38,39,40,41,42,45,47,61,70,71,72,73,74,75,76,77,78,79,80,81,82,92,],[59,-18,-19,-20,-21,-22,-33,-34,-37,-38,59,59,-39,59,59,59,59,59,59,59,59,59,59,-35,59,59,59,]),'ou':([33,34,35,36,37,38,39,40,41,42,45,47,61,70,71,72,73,74,75,76,77,78,79,80,81,82,92,],[60,-18,-19,-20,-21,-22,-33,-34,-37,-38,60,60,-39,60,60,60,60,60,60,60,60,60,60,-35,-36,60,60,]),'entao':([34,35,36,37,38,39,40,41,42,45,61,70,71,72,73,74,75,76,77,78,79,80,81,],[-18,-19,-20,-21,-22,-33,-34,-37,-38,63,-39,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-35,-36,]),'ate':([34,35,36,37,38,39,40,41,42,61,70,71,72,73,74,75,76,77,78,79,80,81,82,],[-18,-19,-20,-21,-22,-33,-34,-37,-38,-39,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-35,-36,88,]),'passo':([34,35,36,37,38,39,40,41,42,61,70,71,72,73,74,75,76,77,78,79,80,81,92,],[-18,-19,-20,-21,-22,-33,-34,-37,-38,-39,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-35,-36,96,]),')':([64,],[84,]),'faca':([97,],[98,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'PORTUGOL':([0,],[1,]),'INICIO':([2,],[3,]),'DECLARACAO':([2,],[4,]),'TIPOVARIAVEL':([2,],[6,]),'DECLARACAO2':([11,15,],[12,31,]),'CODE':([14,65,67,89,90,91,100,],[16,85,86,93,94,95,101,]),'CODE2':([14,33,63,65,67,69,89,90,91,98,100,],[17,48,83,17,17,87,17,17,17,99,17,]),'ATRIBUICAO':([14,28,33,63,65,67,69,89,90,91,98,100,],[19,44,19,19,19,19,19,19,19,19,19,19,]),'CONDICAO':([14,33,63,65,67,69,89,90,91,98,100,],[20,20,20,20,20,20,20,20,20,20,20,]),'CICLO':([14,33,63,65,67,69,89,90,91,98,100,],[21,21,21,21,21,21,21,21,21,21,21,]),'IO':([14,33,63,65,67,69,89,90,91,98,100,],[22,22,22,22,22,22,22,22,22,22,22,]),'FOR':([14,33,63,65,67,69,89,90,91,98,100,],[25,25,25,25,25,25,25,25,25,25,25,]),'WHILE':([14,33,63,65,67,69,89,90,91,98,100,],[26,26,26,26,26,26,26,26,26,26,26,]),'LEIA':([14,33,63,65,67,69,89,90,91,98,100,],[27,27,27,27,27,27,27,27,27,27,27,]),'VALUE':([24,29,32,49,50,51,52,53,54,55,56,57,58,59,60,62,88,],[33,45,47,70,71,72,73,74,75,76,77,78,79,80,81,82,92,]),'EXP':([24,29,32,49,50,51,52,53,54,55,56,57,58,59,60,62,88,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'STR':([24,29,32,49,50,51,52,53,54,55,56,57,58,59,60,62,88,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'BOOL':([24,29,32,49,50,51,52,53,54,55,56,57,58,59,60,62,88,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'TNF':([24,29,32,43,49,50,51,52,53,54,55,56,57,58,59,60,62,88,],[40,40,40,61,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'CONDICAO2':([48,],[66,]),'SENAO':([48,],[68,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> PORTUGOL","S'",1,None,None,None),
  ('PORTUGOL -> Inicio INICIO','PORTUGOL',2,'p_PORTUGOL','grammar.py',38),
  ('INICIO -> DECLARACAO','INICIO',1,'p_INICIO','grammar.py',42),
  ('INICIO -> Fim','INICIO',1,'p_INICIO','grammar.py',43),
  ('DECLARACAO -> TIPOVARIAVEL : DECLARACAO2 ; CODE','DECLARACAO',5,'p_DECLARACAO','grammar.py',47),
  ('TIPOVARIAVEL -> inteiro','TIPOVARIAVEL',1,'p_TIPOVARIAVEL','grammar.py',51),
  ('TIPOVARIAVEL -> real','TIPOVARIAVEL',1,'p_TIPOVARIAVEL','grammar.py',52),
  ('TIPOVARIAVEL -> logico','TIPOVARIAVEL',1,'p_TIPOVARIAVEL','grammar.py',53),
  ('TIPOVARIAVEL -> caracter','TIPOVARIAVEL',1,'p_TIPOVARIAVEL','grammar.py',54),
  ('DECLARACAO2 -> nomeVariavel','DECLARACAO2',1,'p_DECLARACAO2v1','grammar.py',58),
  ('DECLARACAO2 -> nomeVariavel , DECLARACAO2','DECLARACAO2',3,'p_DECLARACAO2v2','grammar.py',62),
  ('CODE -> CODE2','CODE',1,'p_CODE','grammar.py',66),
  ('CODE -> Fim','CODE',1,'p_CODE','grammar.py',67),
  ('CODE2 -> ATRIBUICAO','CODE2',1,'p_CODE2','grammar.py',71),
  ('CODE2 -> CONDICAO','CODE2',1,'p_CODE2','grammar.py',72),
  ('CODE2 -> CICLO','CODE2',1,'p_CODE2','grammar.py',73),
  ('CODE2 -> IO','CODE2',1,'p_CODE2','grammar.py',74),
  ('ATRIBUICAO -> nomeVariavel assign VALUE ; CODE','ATRIBUICAO',5,'p_ATRIBUICAO','grammar.py',78),
  ('VALUE -> EXP','VALUE',1,'p_VALUE','grammar.py',83),
  ('VALUE -> STR','VALUE',1,'p_VALUE','grammar.py',84),
  ('VALUE -> BOOL','VALUE',1,'p_VALUE','grammar.py',85),
  ('VALUE -> nomeVariavel','VALUE',1,'p_VALUE','grammar.py',86),
  ('EXP -> valorNumero','EXP',1,'p_EXP','grammar.py',90),
  ('EXP -> VALUE + VALUE','EXP',3,'p_EXP2','grammar.py',94),
  ('EXP -> VALUE - VALUE','EXP',3,'p_EXP2','grammar.py',95),
  ('EXP -> VALUE / VALUE','EXP',3,'p_EXP2','grammar.py',96),
  ('EXP -> VALUE * VALUE','EXP',3,'p_EXP2','grammar.py',97),
  ('EXP -> VALUE < VALUE','EXP',3,'p_EXP2','grammar.py',98),
  ('EXP -> VALUE > VALUE','EXP',3,'p_EXP2','grammar.py',99),
  ('EXP -> VALUE menorIgual VALUE','EXP',3,'p_EXP2','grammar.py',100),
  ('EXP -> VALUE maiorIgual VALUE','EXP',3,'p_EXP2','grammar.py',101),
  ('EXP -> VALUE diferente VALUE','EXP',3,'p_EXP2','grammar.py',102),
  ('EXP -> VALUE = VALUE','EXP',3,'p_EXP2','grammar.py',103),
  ('STR -> valorString','STR',1,'p_STR','grammar.py',107),
  ('BOOL -> TNF','BOOL',1,'p_BOOL','grammar.py',111),
  ('BOOL -> VALUE e VALUE','BOOL',3,'p_BOOL','grammar.py',112),
  ('BOOL -> VALUE ou VALUE','BOOL',3,'p_BOOL','grammar.py',113),
  ('TNF -> verdadeiro','TNF',1,'p_TNF','grammar.py',120),
  ('TNF -> falso','TNF',1,'p_TNF','grammar.py',121),
  ('TNF -> nao TNF','TNF',2,'p_TNF2','grammar.py',125),
  ('CONDICAO -> se VALUE CODE2 CONDICAO2','CONDICAO',4,'p_CONDICAO','grammar.py',129),
  ('CONDICAO2 -> fim_se CODE','CONDICAO2',2,'p_CODICAO2v1','grammar.py',133),
  ('CONDICAO2 -> SENAO','CONDICAO2',1,'p_CONDICAO2v2','grammar.py',137),
  ('SENAO -> senao CODE2 fim_se CODE','SENAO',4,'p_SENAO','grammar.py',141),
  ('CICLO -> FOR','CICLO',1,'p_CICLO','grammar.py',145),
  ('CICLO -> WHILE','CICLO',1,'p_CICLO','grammar.py',146),
  ('FOR -> para ATRIBUICAO de VALUE ate VALUE passo valorNumero faca CODE2 fim_para CODE','FOR',12,'p_FOR','grammar.py',150),
  ('WHILE -> enquanto VALUE entao CODE2 fim_enquanto CODE','WHILE',6,'p_WHILE','grammar.py',154),
  ('IO -> LEIA','IO',1,'p_IO','grammar.py',158),
  ('LEIA -> leia ( nomeVariavel ) ; CODE','LEIA',6,'p_LEIA','grammar.py',163),
]
