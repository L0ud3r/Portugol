
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "leftorxorleftandleft<>left+-left*/rightuminusand assign ate de dif enquanto entao escreva faca false fim fimenquanto fimfuncao fimpara fimse funcao geq leia leq not nr or para se senao string true var vartype xor code : s  code : code ';' s   s : func\n              | comando\n              | fim ciclo : para var de e ate e faca com_list ';' fimpara ciclo : enquanto n faca com_list ';' fimenquanto func : funcao var '(' args ')' com_list ';' fimfuncao  comando : e\n                    | ciclo  comando : var assign e  comando : escreva '(' e_list ')'  comando : leia '(' var_list ')'  comando : vartype ':' var_list comando : se e entao com_list ';' senao com_list ';' fimsecomando : se e entao com_list ';' fimse com_list : comando\n                     | com_list ';' comando  e_list : e\n                   | e_list ',' e  e : var  e : '(' e ')'  e : b\n              | n\n              | string  e : var '(' e_list ')'\n              | var '(' ')'  n : nr\n              | '-' e  %prec uminus   n : '(' n ')'  n : e '+' e\n              | e '-' e\n              | e '*' e\n              | e '/' e n : e '<' e\n              | e leq e\n              | e '>' e\n              | e geq e\n              | e '=' e\n              | e dif e b : f\n              | e or e\n              | e and e\n              | e xor e  f : true  f : false  f : not f  var_list : var\n                     | var_list ',' var  args :\n                 | var_list "
    
_lr_action_items = {'fim':([0,26,],[5,5,]),'funcao':([0,26,],[6,6,]),'var':([0,6,8,14,18,19,22,26,28,29,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,53,57,81,82,83,87,90,95,98,99,100,102,107,109,111,114,],[7,27,32,32,50,32,32,7,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,79,79,32,79,7,32,7,32,97,7,7,32,7,7,7,7,7,7,]),'escreva':([0,26,81,83,95,98,100,102,107,109,111,114,],[11,11,11,11,11,11,11,11,11,11,11,11,]),'leia':([0,26,81,83,95,98,100,102,107,109,111,114,],[12,12,12,12,12,12,12,12,12,12,12,12,]),'vartype':([0,26,81,83,95,98,100,102,107,109,111,114,],[13,13,13,13,13,13,13,13,13,13,13,13,]),'se':([0,26,81,83,95,98,100,102,107,109,111,114,],[14,14,14,14,14,14,14,14,14,14,14,14,]),'(':([0,7,8,11,12,14,19,22,26,27,28,29,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,53,81,82,83,87,95,98,99,100,102,107,109,111,114,],[8,29,8,46,47,8,53,8,8,57,8,8,29,8,8,8,8,8,8,8,8,8,8,8,8,8,8,53,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'string':([0,8,14,19,22,26,28,29,33,34,35,36,37,38,39,40,41,42,43,44,45,46,53,81,82,83,87,95,98,99,100,102,107,109,111,114,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'para':([0,26,81,83,95,98,100,102,107,109,111,114,],[18,18,18,18,18,18,18,18,18,18,18,18,]),'enquanto':([0,26,81,83,95,98,100,102,107,109,111,114,],[19,19,19,19,19,19,19,19,19,19,19,19,]),'nr':([0,8,14,19,22,26,28,29,33,34,35,36,37,38,39,40,41,42,43,44,45,46,53,81,82,83,87,95,98,99,100,102,107,109,111,114,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'-':([0,7,8,9,14,15,16,17,19,20,21,22,23,24,26,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,49,51,52,53,54,55,58,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,81,82,83,86,87,93,95,96,98,99,100,102,105,107,109,111,114,],[22,-21,22,37,22,-23,-24,-25,22,-41,-28,22,-45,-46,22,22,22,37,-24,-21,22,22,22,22,22,22,22,22,22,22,22,22,22,22,37,-24,37,22,-29,-47,37,-27,37,-22,-30,37,37,37,-31,-32,-33,-34,37,37,37,37,37,37,22,22,22,-26,22,37,22,37,22,22,22,22,37,22,22,22,22,]),'true':([0,8,14,19,22,25,26,28,29,33,34,35,36,37,38,39,40,41,42,43,44,45,46,53,81,82,83,87,95,98,99,100,102,107,109,111,114,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'false':([0,8,14,19,22,25,26,28,29,33,34,35,36,37,38,39,40,41,42,43,44,45,46,53,81,82,83,87,95,98,99,100,102,107,109,111,114,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'not':([0,8,14,19,22,25,26,28,29,33,34,35,36,37,38,39,40,41,42,43,44,45,46,53,81,82,83,87,95,98,99,100,102,107,109,111,114,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'$end':([1,2,3,4,5,7,9,10,15,16,17,20,21,23,24,32,54,55,56,58,60,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,79,80,86,88,89,97,103,106,110,113,115,],[0,-1,-3,-4,-5,-21,-9,-10,-23,-24,-25,-41,-28,-45,-46,-21,-29,-47,-2,-11,-27,-22,-30,-42,-43,-44,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-48,-14,-26,-12,-13,-49,-16,-7,-8,-15,-6,]),';':([1,2,3,4,5,7,9,10,15,16,17,20,21,23,24,32,54,55,56,58,60,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,79,80,86,88,89,91,92,94,97,101,103,104,106,108,110,112,113,115,],[26,-1,-3,-4,-5,-21,-9,-10,-23,-24,-25,-41,-28,-45,-46,-21,-29,-47,-2,-11,-27,-22,-30,-42,-43,-44,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-48,-14,-26,-12,-13,98,-17,100,-49,107,-16,-18,-7,111,-8,114,-15,-6,]),'assign':([7,],[28,]),'or':([7,9,15,16,17,20,21,23,24,30,31,32,49,51,52,54,55,58,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,86,93,96,105,],[-21,33,-23,-24,-25,-41,-28,-45,-46,33,-24,-21,33,-24,33,-29,-47,33,-27,33,-22,-30,-42,-43,-44,-31,-32,-33,-34,-35,33,-37,33,33,33,-26,33,33,33,]),'and':([7,9,15,16,17,20,21,23,24,30,31,32,49,51,52,54,55,58,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,86,93,96,105,],[-21,34,-23,-24,-25,-41,-28,-45,-46,34,-24,-21,34,-24,34,-29,-47,34,-27,34,-22,-30,34,-43,34,-31,-32,-33,-34,-35,34,-37,34,34,34,-26,34,34,34,]),'xor':([7,9,15,16,17,20,21,23,24,30,31,32,49,51,52,54,55,58,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,86,93,96,105,],[-21,35,-23,-24,-25,-41,-28,-45,-46,35,-24,-21,35,-24,35,-29,-47,35,-27,35,-22,-30,-42,-43,-44,-31,-32,-33,-34,-35,35,-37,35,35,35,-26,35,35,35,]),'+':([7,9,15,16,17,20,21,23,24,30,31,32,49,51,52,54,55,58,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,86,93,96,105,],[-21,36,-23,-24,-25,-41,-28,-45,-46,36,-24,-21,36,-24,36,-29,-47,36,-27,36,-22,-30,36,36,36,-31,-32,-33,-34,36,36,36,36,36,36,-26,36,36,36,]),'*':([7,9,15,16,17,20,21,23,24,30,31,32,49,51,52,54,55,58,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,86,93,96,105,],[-21,38,-23,-24,-25,-41,-28,-45,-46,38,-24,-21,38,-24,38,-29,-47,38,-27,38,-22,-30,38,38,38,38,38,-33,-34,38,38,38,38,38,38,-26,38,38,38,]),'/':([7,9,15,16,17,20,21,23,24,30,31,32,49,51,52,54,55,58,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,86,93,96,105,],[-21,39,-23,-24,-25,-41,-28,-45,-46,39,-24,-21,39,-24,39,-29,-47,39,-27,39,-22,-30,39,39,39,39,39,-33,-34,39,39,39,39,39,39,-26,39,39,39,]),'<':([7,9,15,16,17,20,21,23,24,30,31,32,49,51,52,54,55,58,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,86,93,96,105,],[-21,40,-23,-24,-25,-41,-28,-45,-46,40,-24,-21,40,-24,40,-29,-47,40,-27,40,-22,-30,40,40,40,-31,-32,-33,-34,-35,40,-37,40,40,40,-26,40,40,40,]),'leq':([7,9,15,16,17,20,21,23,24,30,31,32,49,51,52,54,55,58,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,86,93,96,105,],[-21,41,-23,-24,-25,-41,-28,-45,-46,41,-24,-21,41,-24,41,-29,-47,41,-27,41,-22,-30,-42,-43,-44,-31,-32,-33,-34,-35,41,-37,41,41,41,-26,41,41,41,]),'>':([7,9,15,16,17,20,21,23,24,30,31,32,49,51,52,54,55,58,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,86,93,96,105,],[-21,42,-23,-24,-25,-41,-28,-45,-46,42,-24,-21,42,-24,42,-29,-47,42,-27,42,-22,-30,42,42,42,-31,-32,-33,-34,-35,42,-37,42,42,42,-26,42,42,42,]),'geq':([7,9,15,16,17,20,21,23,24,30,31,32,49,51,52,54,55,58,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,86,93,96,105,],[-21,43,-23,-24,-25,-41,-28,-45,-46,43,-24,-21,43,-24,43,-29,-47,43,-27,43,-22,-30,-42,-43,-44,-31,-32,-33,-34,-35,43,-37,43,43,43,-26,43,43,43,]),'=':([7,9,15,16,17,20,21,23,24,30,31,32,49,51,52,54,55,58,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,86,93,96,105,],[-21,44,-23,-24,-25,-41,-28,-45,-46,44,-24,-21,44,-24,44,-29,-47,44,-27,44,-22,-30,-42,-43,-44,-31,-32,-33,-34,-35,44,-37,44,44,44,-26,44,44,44,]),'dif':([7,9,15,16,17,20,21,23,24,30,31,32,49,51,52,54,55,58,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,86,93,96,105,],[-21,45,-23,-24,-25,-41,-28,-45,-46,45,-24,-21,45,-24,45,-29,-47,45,-27,45,-22,-30,-42,-43,-44,-31,-32,-33,-34,-35,45,-37,45,45,45,-26,45,45,45,]),':':([13,],[48,]),')':([15,16,17,20,21,23,24,29,30,31,32,54,55,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,84,85,86,96,97,],[-23,-24,-25,-41,-28,-45,-46,60,62,63,-21,-29,-47,-50,86,-27,-19,-22,-30,-42,-43,-44,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,88,89,-48,95,-51,-26,-20,-49,]),'entao':([15,16,17,20,21,23,24,32,49,54,55,60,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,86,],[-23,-24,-25,-41,-28,-45,-46,-21,81,-29,-47,-27,-22,-30,-42,-43,-44,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-26,]),'faca':([15,16,17,20,21,23,24,32,51,54,55,60,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,86,105,],[-23,-24,-25,-41,-28,-45,-46,-21,83,-29,-47,-27,-22,-30,-42,-43,-44,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-26,109,]),',':([15,16,17,20,21,23,24,32,54,55,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,85,86,96,97,],[-23,-24,-25,-41,-28,-45,-46,-21,-29,-47,87,-27,-19,-22,-30,-42,-43,-44,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,87,90,-48,90,90,-26,-20,-49,]),'ate':([15,16,17,20,21,23,24,32,54,55,60,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,86,93,],[-23,-24,-25,-41,-28,-45,-46,-21,-29,-47,-27,-22,-30,-42,-43,-44,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-26,99,]),'de':([50,],[82,]),'senao':([98,],[102,]),'fimse':([98,111,],[103,113,]),'fimenquanto':([100,],[106,]),'fimfuncao':([107,],[110,]),'fimpara':([114,],[115,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'code':([0,],[1,]),'s':([0,26,],[2,56,]),'func':([0,26,],[3,3,]),'comando':([0,26,81,83,95,98,100,102,107,109,111,114,],[4,4,92,92,92,104,104,92,104,92,104,104,]),'e':([0,8,14,19,22,26,28,29,33,34,35,36,37,38,39,40,41,42,43,44,45,46,53,81,82,83,87,95,98,99,100,102,107,109,111,114,],[9,30,49,52,54,9,58,61,64,65,66,67,68,69,70,71,72,73,74,75,76,61,30,9,93,9,96,9,9,105,9,9,9,9,9,9,]),'ciclo':([0,26,81,83,95,98,100,102,107,109,111,114,],[10,10,10,10,10,10,10,10,10,10,10,10,]),'b':([0,8,14,19,22,26,28,29,33,34,35,36,37,38,39,40,41,42,43,44,45,46,53,81,82,83,87,95,98,99,100,102,107,109,111,114,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'n':([0,8,14,19,22,26,28,29,33,34,35,36,37,38,39,40,41,42,43,44,45,46,53,81,82,83,87,95,98,99,100,102,107,109,111,114,],[16,31,16,51,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,31,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'f':([0,8,14,19,22,25,26,28,29,33,34,35,36,37,38,39,40,41,42,43,44,45,46,53,81,82,83,87,95,98,99,100,102,107,109,111,114,],[20,20,20,20,20,55,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'e_list':([29,46,],[59,77,]),'var_list':([47,48,57,],[78,80,85,]),'args':([57,],[84,]),'com_list':([81,83,95,102,109,],[91,94,101,108,112,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> code","S'",1,None,None,None),
  ('code -> s','code',1,'p_code1','logic_grammar.py',36),
  ('code -> code ; s','code',3,'p_code2','logic_grammar.py',40),
  ('s -> func','s',1,'p_s','logic_grammar.py',45),
  ('s -> comando','s',1,'p_s','logic_grammar.py',46),
  ('s -> fim','s',1,'p_s','logic_grammar.py',47),
  ('ciclo -> para var de e ate e faca com_list ; fimpara','ciclo',10,'p_ciclo','logic_grammar.py',61),
  ('ciclo -> enquanto n faca com_list ; fimenquanto','ciclo',6,'p_ciclo2','logic_grammar.py',69),
  ('func -> funcao var ( args ) com_list ; fimfuncao','func',8,'p_func','logic_grammar.py',87),
  ('comando -> e','comando',1,'p_comando1','logic_grammar.py',96),
  ('comando -> ciclo','comando',1,'p_comando1','logic_grammar.py',97),
  ('comando -> var assign e','comando',3,'p_comando2','logic_grammar.py',101),
  ('comando -> escreva ( e_list )','comando',4,'p_comando3','logic_grammar.py',112),
  ('comando -> leia ( var_list )','comando',4,'p_comando4','logic_grammar.py',123),
  ('comando -> vartype : var_list','comando',3,'p_comando5','logic_grammar.py',127),
  ('comando -> se e entao com_list ; senao com_list ; fimse','comando',9,'p_comando6','logic_grammar.py',133),
  ('comando -> se e entao com_list ; fimse','comando',6,'p_comando7','logic_grammar.py',139),
  ('com_list -> comando','com_list',1,'p_com_list','logic_grammar.py',146),
  ('com_list -> com_list ; comando','com_list',3,'p_com_list','logic_grammar.py',147),
  ('e_list -> e','e_list',1,'p_e_list','logic_grammar.py',161),
  ('e_list -> e_list , e','e_list',3,'p_e_list','logic_grammar.py',162),
  ('e -> var','e',1,'p_e1','logic_grammar.py',170),
  ('e -> ( e )','e',3,'p_e2','logic_grammar.py',174),
  ('e -> b','e',1,'p_e3','logic_grammar.py',178),
  ('e -> n','e',1,'p_e3','logic_grammar.py',179),
  ('e -> string','e',1,'p_e3','logic_grammar.py',180),
  ('e -> var ( e_list )','e',4,'p_e4','logic_grammar.py',184),
  ('e -> var ( )','e',3,'p_e4','logic_grammar.py',185),
  ('n -> nr','n',1,'p_n1','logic_grammar.py',193),
  ('n -> - e','n',2,'p_n1','logic_grammar.py',194),
  ('n -> ( n )','n',3,'p_n2','logic_grammar.py',198),
  ('n -> e + e','n',3,'p_n3','logic_grammar.py',202),
  ('n -> e - e','n',3,'p_n3','logic_grammar.py',203),
  ('n -> e * e','n',3,'p_n3','logic_grammar.py',204),
  ('n -> e / e','n',3,'p_n3','logic_grammar.py',205),
  ('n -> e < e','n',3,'p_n4','logic_grammar.py',209),
  ('n -> e leq e','n',3,'p_n4','logic_grammar.py',210),
  ('n -> e > e','n',3,'p_n4','logic_grammar.py',211),
  ('n -> e geq e','n',3,'p_n4','logic_grammar.py',212),
  ('n -> e = e','n',3,'p_n4','logic_grammar.py',213),
  ('n -> e dif e','n',3,'p_n4','logic_grammar.py',214),
  ('b -> f','b',1,'p_b1','logic_grammar.py',220),
  ('b -> e or e','b',3,'p_b1','logic_grammar.py',221),
  ('b -> e and e','b',3,'p_b1','logic_grammar.py',222),
  ('b -> e xor e','b',3,'p_b1','logic_grammar.py',223),
  ('f -> true','f',1,'p_f1','logic_grammar.py',232),
  ('f -> false','f',1,'p_f2','logic_grammar.py',236),
  ('f -> not f','f',2,'p_f3','logic_grammar.py',240),
  ('var_list -> var','var_list',1,'p_var_list','logic_grammar.py',246),
  ('var_list -> var_list , var','var_list',3,'p_var_list','logic_grammar.py',247),
  ('args -> <empty>','args',0,'p_args','logic_grammar.py',257),
  ('args -> var_list','args',1,'p_args','logic_grammar.py',258),
]
