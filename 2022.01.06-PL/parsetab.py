
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "left+-left*/rightuminusleftorxorleftandand assign ate de escreva faca false fim fimfuncao fimpara funcao leia not nr or para string true var vartype xor code : s  code : code ';' s   ciclo : para var de e ate e faca com_list ';' fimpara  func : funcao var '(' args ')' com_list ';' fimfuncao  comando : e\n                    | ciclo  comando : var assign e  comando : escreva '(' e_list ')'  comando : leia '(' var_list ')'  comando : vartype ':' var_list  s : func\n              | comando\n              | fim e_list : e\n                   | e_list ',' e  n : nr\n              | '-' e  %prec uminus   n : e '+' e\n              | e '-' e\n              | e '*' e\n              | e '/' e  b : f\n              | e or e\n              | e and e\n              | e xor e  f : true  f : false  f : not f  e : var  e : '(' e ')'  e : b\n              | n\n              | string  e : var '(' e_list ')'\n              | var '(' ')'  com_list : comando\n                     | com_list ';' comando  var_list : var\n                     | var_list ',' var  args :\n                 | var_list "
    
_lr_action_items = {'fim':([0,24,],[5,5,]),'funcao':([0,24,],[6,6,]),'var':([0,6,8,17,20,24,26,27,30,31,32,33,34,35,36,37,38,39,44,61,65,68,70,73,77,78,82,],[7,25,29,40,29,7,29,29,29,29,29,29,29,29,29,29,59,59,59,29,29,72,7,29,7,7,7,]),'escreva':([0,24,70,77,78,82,],[11,11,11,11,11,11,]),'leia':([0,24,70,77,78,82,],[12,12,12,12,12,12,]),'vartype':([0,24,70,77,78,82,],[13,13,13,13,13,13,]),'(':([0,7,8,11,12,20,24,25,26,27,29,30,31,32,33,34,35,36,37,61,65,70,73,77,78,82,],[8,27,8,37,38,8,8,44,8,8,27,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'string':([0,8,20,24,26,27,30,31,32,33,34,35,36,37,61,65,70,73,77,78,82,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'para':([0,24,70,77,78,82,],[17,17,17,17,17,17,]),'nr':([0,8,20,24,26,27,30,31,32,33,34,35,36,37,61,65,70,73,77,78,82,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'-':([0,7,8,9,14,15,16,18,19,20,21,22,24,26,27,28,29,30,31,32,33,34,35,36,37,41,42,45,47,48,49,50,51,52,53,54,55,56,61,64,65,69,70,71,73,76,77,78,82,],[20,-29,20,34,-31,-32,-33,-22,-16,20,-26,-27,20,20,20,34,-29,20,20,20,20,20,20,20,20,-17,-28,34,-35,34,-30,-23,-24,-25,-18,-19,-20,-21,20,-34,20,34,20,34,20,34,20,20,20,]),'true':([0,8,20,23,24,26,27,30,31,32,33,34,35,36,37,61,65,70,73,77,78,82,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'false':([0,8,20,23,24,26,27,30,31,32,33,34,35,36,37,61,65,70,73,77,78,82,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'not':([0,8,20,23,24,26,27,30,31,32,33,34,35,36,37,61,65,70,73,77,78,82,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'$end':([1,2,3,4,5,7,9,10,14,15,16,18,19,21,22,29,41,42,43,45,47,49,50,51,52,53,54,55,56,59,60,64,66,67,72,79,83,],[0,-1,-11,-12,-13,-29,-5,-6,-31,-32,-33,-22,-16,-26,-27,-29,-17,-28,-2,-7,-35,-30,-23,-24,-25,-18,-19,-20,-21,-38,-10,-34,-8,-9,-39,-4,-3,]),';':([1,2,3,4,5,7,9,10,14,15,16,18,19,21,22,29,41,42,43,45,47,49,50,51,52,53,54,55,56,59,60,64,66,67,72,74,75,79,80,81,83,],[24,-1,-11,-12,-13,-29,-5,-6,-31,-32,-33,-22,-16,-26,-27,-29,-17,-28,-2,-7,-35,-30,-23,-24,-25,-18,-19,-20,-21,-38,-10,-34,-8,-9,-39,77,-36,-4,-37,82,-3,]),'assign':([7,],[26,]),'or':([7,9,14,15,16,18,19,21,22,28,29,41,42,45,47,48,49,50,51,52,53,54,55,56,64,69,71,76,],[-29,30,-31,-32,-33,-22,-16,-26,-27,30,-29,30,-28,30,-35,30,-30,-23,-24,-25,30,30,30,30,-34,30,30,30,]),'and':([7,9,14,15,16,18,19,21,22,28,29,41,42,45,47,48,49,50,51,52,53,54,55,56,64,69,71,76,],[-29,31,-31,-32,-33,-22,-16,-26,-27,31,-29,31,-28,31,-35,31,-30,31,-24,31,31,31,31,31,-34,31,31,31,]),'xor':([7,9,14,15,16,18,19,21,22,28,29,41,42,45,47,48,49,50,51,52,53,54,55,56,64,69,71,76,],[-29,32,-31,-32,-33,-22,-16,-26,-27,32,-29,32,-28,32,-35,32,-30,-23,-24,-25,32,32,32,32,-34,32,32,32,]),'+':([7,9,14,15,16,18,19,21,22,28,29,41,42,45,47,48,49,50,51,52,53,54,55,56,64,69,71,76,],[-29,33,-31,-32,-33,-22,-16,-26,-27,33,-29,-17,-28,33,-35,33,-30,-23,-24,-25,-18,-19,-20,-21,-34,33,33,33,]),'*':([7,9,14,15,16,18,19,21,22,28,29,41,42,45,47,48,49,50,51,52,53,54,55,56,64,69,71,76,],[-29,35,-31,-32,-33,-22,-16,-26,-27,35,-29,-17,-28,35,-35,35,-30,-23,-24,-25,35,35,-20,-21,-34,35,35,35,]),'/':([7,9,14,15,16,18,19,21,22,28,29,41,42,45,47,48,49,50,51,52,53,54,55,56,64,69,71,76,],[-29,36,-31,-32,-33,-22,-16,-26,-27,36,-29,-17,-28,36,-35,36,-30,-23,-24,-25,36,36,-20,-21,-34,36,36,36,]),':':([13,],[39,]),')':([14,15,16,18,19,21,22,27,28,29,41,42,44,46,47,48,49,50,51,52,53,54,55,56,57,58,59,62,63,64,71,72,],[-31,-32,-33,-22,-16,-26,-27,47,49,-29,-17,-28,-40,64,-35,-14,-30,-23,-24,-25,-18,-19,-20,-21,66,67,-38,70,-41,-34,-15,-39,]),',':([14,15,16,18,19,21,22,29,41,42,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,63,64,71,72,],[-31,-32,-33,-22,-16,-26,-27,-29,-17,-28,65,-35,-14,-30,-23,-24,-25,-18,-19,-20,-21,65,68,-38,68,68,-34,-15,-39,]),'ate':([14,15,16,18,19,21,22,29,41,42,47,49,50,51,52,53,54,55,56,64,69,],[-31,-32,-33,-22,-16,-26,-27,-29,-17,-28,-35,-30,-23,-24,-25,-18,-19,-20,-21,-34,73,]),'faca':([14,15,16,18,19,21,22,29,41,42,47,49,50,51,52,53,54,55,56,64,76,],[-31,-32,-33,-22,-16,-26,-27,-29,-17,-28,-35,-30,-23,-24,-25,-18,-19,-20,-21,-34,78,]),'de':([40,],[61,]),'fimfuncao':([77,],[79,]),'fimpara':([82,],[83,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'code':([0,],[1,]),'s':([0,24,],[2,43,]),'func':([0,24,],[3,3,]),'comando':([0,24,70,77,78,82,],[4,4,75,80,75,80,]),'e':([0,8,20,24,26,27,30,31,32,33,34,35,36,37,61,65,70,73,77,78,82,],[9,28,41,9,45,48,50,51,52,53,54,55,56,48,69,71,9,76,9,9,9,]),'ciclo':([0,24,70,77,78,82,],[10,10,10,10,10,10,]),'b':([0,8,20,24,26,27,30,31,32,33,34,35,36,37,61,65,70,73,77,78,82,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'n':([0,8,20,24,26,27,30,31,32,33,34,35,36,37,61,65,70,73,77,78,82,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'f':([0,8,20,23,24,26,27,30,31,32,33,34,35,36,37,61,65,70,73,77,78,82,],[18,18,18,42,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'e_list':([27,37,],[46,57,]),'var_list':([38,39,44,],[58,60,63,]),'args':([44,],[62,]),'com_list':([70,78,],[74,81,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> code","S'",1,None,None,None),
  ('code -> s','code',1,'p_code1','logic_grammar.py',33),
  ('code -> code ; s','code',3,'p_code2','logic_grammar.py',37),
  ('ciclo -> para var de e ate e faca com_list ; fimpara','ciclo',10,'p_ciclo','logic_grammar.py',52),
  ('func -> funcao var ( args ) com_list ; fimfuncao','func',8,'p_func','logic_grammar.py',70),
  ('comando -> e','comando',1,'p_comando1','logic_grammar.py',79),
  ('comando -> ciclo','comando',1,'p_comando1','logic_grammar.py',80),
  ('comando -> var assign e','comando',3,'p_comando2','logic_grammar.py',84),
  ('comando -> escreva ( e_list )','comando',4,'p_comando3','logic_grammar.py',95),
  ('comando -> leia ( var_list )','comando',4,'p_comando4','logic_grammar.py',106),
  ('comando -> vartype : var_list','comando',3,'p_comando5','logic_grammar.py',110),
  ('s -> func','s',1,'p_s','logic_grammar.py',118),
  ('s -> comando','s',1,'p_s','logic_grammar.py',119),
  ('s -> fim','s',1,'p_s','logic_grammar.py',120),
  ('e_list -> e','e_list',1,'p_e_list','logic_grammar.py',126),
  ('e_list -> e_list , e','e_list',3,'p_e_list','logic_grammar.py',127),
  ('n -> nr','n',1,'p_n1','logic_grammar.py',135),
  ('n -> - e','n',2,'p_n1','logic_grammar.py',136),
  ('n -> e + e','n',3,'p_n2','logic_grammar.py',140),
  ('n -> e - e','n',3,'p_n2','logic_grammar.py',141),
  ('n -> e * e','n',3,'p_n2','logic_grammar.py',142),
  ('n -> e / e','n',3,'p_n2','logic_grammar.py',143),
  ('b -> f','b',1,'p_b1','logic_grammar.py',149),
  ('b -> e or e','b',3,'p_b1','logic_grammar.py',150),
  ('b -> e and e','b',3,'p_b1','logic_grammar.py',151),
  ('b -> e xor e','b',3,'p_b1','logic_grammar.py',152),
  ('f -> true','f',1,'p_f1','logic_grammar.py',161),
  ('f -> false','f',1,'p_f2','logic_grammar.py',165),
  ('f -> not f','f',2,'p_f3','logic_grammar.py',169),
  ('e -> var','e',1,'p_e1','logic_grammar.py',175),
  ('e -> ( e )','e',3,'p_e2','logic_grammar.py',179),
  ('e -> b','e',1,'p_e3','logic_grammar.py',183),
  ('e -> n','e',1,'p_e3','logic_grammar.py',184),
  ('e -> string','e',1,'p_e3','logic_grammar.py',185),
  ('e -> var ( e_list )','e',4,'p_e4','logic_grammar.py',189),
  ('e -> var ( )','e',3,'p_e4','logic_grammar.py',190),
  ('com_list -> comando','com_list',1,'p_com_list','logic_grammar.py',198),
  ('com_list -> com_list ; comando','com_list',3,'p_com_list','logic_grammar.py',199),
  ('var_list -> var','var_list',1,'p_var_list','logic_grammar.py',209),
  ('var_list -> var_list , var','var_list',3,'p_var_list','logic_grammar.py',210),
  ('args -> <empty>','args',0,'p_args','logic_grammar.py',220),
  ('args -> var_list','args',1,'p_args','logic_grammar.py',221),
]
